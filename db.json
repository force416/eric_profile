{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/very-simple/source/css/highlight.scss","path":"css/highlight.scss","modified":0,"renderable":1},{"_id":"themes/very-simple/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/very-simple/source/css/very-simple.scss","path":"css/very-simple.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"6931a404837dadf6367db00e5b2b914b6064c617","modified":1462087632000},{"_id":"themes/very-simple/.travis.yml","hash":"8984d77e2fdaa16b90d25f59baafb61e06bf8e61","modified":1472956682000},{"_id":"themes/very-simple/LICENSE","hash":"68a4bd4855a0540b1c0ecbdcec96192ac7c7c3d9","modified":1472956682000},{"_id":"themes/very-simple/README.md","hash":"8646e3da8dad8210b690f11f4d90056263f04b39","modified":1472956682000},{"_id":"themes/very-simple/_config.yml","hash":"77380759b311e4655f14d2f1053c46fe61352e7e","modified":1472965556000},{"_id":"source/_posts/.DS_Store","hash":"5e34bf3c55e63d8de6a4777ca3faa5db9625cb72","modified":1462087632000},{"_id":"source/_posts/common-gradle-use.md","hash":"8aea86436f65ffec224aec7f51cd8bc683222d32","modified":1464439300000},{"_id":"source/_posts/deployHexoToGithub.md","hash":"57dfc36df603ecabbb001110db8906d471825aef","modified":1461831779000},{"_id":"source/_posts/docker-use.md","hash":"b410c5aa14fb5547bbd0e44f98900c502cf5825d","modified":1467612656000},{"_id":"source/_posts/fb_comments.md","hash":"f00f87d3e218db9c953469544b0014b659c38b0a","modified":1472965030000},{"_id":"source/_posts/godaddy-ssl-and-nginx-install.md","hash":"8436fb0309a911d3242fd4fb8df825ccb08abaf7","modified":1469757183000},{"_id":"source/_posts/implement-linkedlist-in-java.md","hash":"a65ecc48f7ff61a71d5f7d066f14efd52bb42af1","modified":1470208552000},{"_id":"source/_posts/install-mysqldb-on-ubuntu.md","hash":"87b33eda7f063a3d2c5b65c8eaab3f071ece8d3a","modified":1461986412000},{"_id":"source/_posts/line-bot-api.md","hash":"4bd5e3e348f28c9e9914dc4d332d0de82ec46bd5","modified":1469760819000},{"_id":"source/_posts/npm-basic-command-line.md","hash":"c2c6bd3582bc32b81b4970abf8685313ce17c6ab","modified":1462412127000},{"_id":"source/_posts/spring-boot-web-services.md","hash":"0df0d48f9df4968605fdd6dd3b4b4a60ad249e7b","modified":1466258150000},{"_id":"source/_posts/ubuntu-install-nginx.md","hash":"5239077021da15c026ef1720806b0d947d5afbe5","modified":1462680751000},{"_id":"source/_posts/ubuntu-nginx-ssl-setting.md","hash":"2b4e69dfc7e70df2bfc514e3ef45a243b018f13b","modified":1462094792000},{"_id":"source/about/.DS_Store","hash":"8208a60b8feacf7ffb9395ac09bc39029f5b3898","modified":1461836658000},{"_id":"source/about/index.md","hash":"c8563bf4a7686add34f65e8d66d95f28eb26355f","modified":1461646494000},{"_id":"themes/very-simple/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1472956682000},{"_id":"themes/very-simple/.git/config","hash":"abbada40b44d77eb8fc3a8d641563b0198a4e61d","modified":1472956682000},{"_id":"themes/very-simple/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1472956674000},{"_id":"themes/very-simple/.git/index","hash":"ed6e7dce659208f920fefcd76293fc7f78c83304","modified":1472956682000},{"_id":"themes/very-simple/.git/packed-refs","hash":"90ffa9561a6abb8e89e88370554ccbfe7c8b9c2a","modified":1472956682000},{"_id":"themes/very-simple/layout/archive.jade","hash":"8e4df04454964e12e9493d646477101d6d2587d3","modified":1472956682000},{"_id":"themes/very-simple/layout/base.jade","hash":"4ee19b3472bcb4fc0d3c0b1ab7071fb2faca4d77","modified":1472964695000},{"_id":"themes/very-simple/layout/index.jade","hash":"56456b9be03b1dbfd2103ee9afd71254c93a4696","modified":1472956682000},{"_id":"themes/very-simple/layout/page.jade","hash":"6923b634905a17fa5bc5f8e0249dad1b63910c35","modified":1472961144000},{"_id":"themes/very-simple/layout/post.jade","hash":"b2a3136a0102a4f648338b6d781f2eaf72818de1","modified":1472956682000},{"_id":"source/_posts/docker-use/docker_img.jpg","hash":"d783d4e15339ac23e7b01615e73e32856e93f48c","modified":1467611482000},{"_id":"source/_posts/npm-basic-command-line/.DS_Store","hash":"79ec725683ee908d9b8053817962f09763b1b1d6","modified":1462087646000},{"_id":"source/_posts/ubuntu-install-nginx/proxy_server.jpg","hash":"8522f4a1af30aeb0f0b24bb4e74ea31e0500dff2","modified":1462679003000},{"_id":"themes/very-simple/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1472956674000},{"_id":"themes/very-simple/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1472956674000},{"_id":"themes/very-simple/.git/logs/HEAD","hash":"4a3a4aa7a87d2f67755936862a9a0cbee54ee841","modified":1472956682000},{"_id":"themes/very-simple/layout/_partial/comments.jade","hash":"57deb2756c9292b16f92f60a9557ea9c4d92caa7","modified":1472965173000},{"_id":"themes/very-simple/layout/_partial/paginator.jade","hash":"7327f32b5b9e6b224c58dcff5942dbba8dfe5582","modified":1472956682000},{"_id":"themes/very-simple/layout/_partial/helpers.jade","hash":"1b08c2dcdd59507ea4be1526e40b5cc75de6f750","modified":1472956682000},{"_id":"themes/very-simple/source/css/_variables.scss","hash":"1de53890b087afc0df8d137c4df8ec50ba12bddb","modified":1472956682000},{"_id":"themes/very-simple/source/css/highlight.scss","hash":"7b47a0c16e2a12c6a8867037e6ee4226f2b4736e","modified":1472956682000},{"_id":"themes/very-simple/source/css/normalize.css","hash":"d0fbef3dd405f26a5fdc896ca1f7875901782c6f","modified":1472956682000},{"_id":"themes/very-simple/source/css/very-simple.scss","hash":"674b56f0c226df7d22ca6050abf300c29fe59062","modified":1472956682000},{"_id":"source/_posts/npm-basic-command-line/example.png","hash":"3a0fe5a533286af4a14a771ea018d7f29497b9c3","modified":1462087560000},{"_id":"themes/very-simple/.git/objects/pack/pack-1207184d8284f04df75e7f9509f563f5c9b0c29f.idx","hash":"4620a6439f26651c15e32c9f31b1592521b6c4cf","modified":1472956682000},{"_id":"themes/very-simple/.git/refs/heads/master","hash":"9b75c26db31eeb1aab420ddca7b29311d3ba04cc","modified":1472956682000},{"_id":"themes/very-simple/.git/logs/refs/heads/master","hash":"4a3a4aa7a87d2f67755936862a9a0cbee54ee841","modified":1472956682000},{"_id":"themes/very-simple/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1472956682000},{"_id":"themes/very-simple/.git/logs/refs/remotes/origin/HEAD","hash":"4a3a4aa7a87d2f67755936862a9a0cbee54ee841","modified":1472956682000},{"_id":"themes/very-simple/.git/objects/pack/pack-1207184d8284f04df75e7f9509f563f5c9b0c29f.pack","hash":"6fada08f3ba07aa09c876c86b1ad7b0046fbebd3","modified":1472956682000},{"_id":"public/sitemap.xml","hash":"5eeefe3a1d7daf1e979caa60198510f8db8a10a4","modified":1472965568466},{"_id":"public/about/index.html","hash":"a6be66482b605ebbee4ff28cac9939f9c1d88574","modified":1472965568473},{"_id":"public/2016/07/28/line-bot-api/index.html","hash":"954a08fabec5751a5e48795214dd85a0a0979d2c","modified":1472965568473},{"_id":"public/2016/07/21/godaddy-ssl-and-nginx-install/index.html","hash":"32e7f8be0c714860df60df45a99bac88aa35d419","modified":1472965568473},{"_id":"public/2016/07/04/docker-use/index.html","hash":"8fef3ac4fe91d0672c4456f91d715b74a9446251","modified":1472965568473},{"_id":"public/2016/05/28/spring-boot-web-services/index.html","hash":"1f7729ba18fcfb67170e44a5a9ac5c2e787923e0","modified":1472965568473},{"_id":"public/2016/05/12/common-gradle-use/index.html","hash":"a51a5cb011520c2a8835a7954982f9333287a9e7","modified":1472965568473},{"_id":"public/2016/05/08/ubuntu-install-nginx/index.html","hash":"f4ca0d0041e80d01ce15ce87148fd707155704bc","modified":1472965568473},{"_id":"public/2016/05/01/npm-basic-command-line/index.html","hash":"60a94822c06424c494b3f6e30fba0a31cae8ea80","modified":1472965568473},{"_id":"public/2016/04/28/ubuntu-nginx-ssl-setting/index.html","hash":"dca2b39ac433fece82925da3de014a6014424303","modified":1472965568474},{"_id":"public/2016/04/27/install-mysqldb-on-ubuntu/index.html","hash":"fd4dea42b7ed054e322d42fe79f69b69e69d45b0","modified":1472965568474},{"_id":"public/2016/04/26/fb_comments/index.html","hash":"bfe5aabbeaa97e9ddbf6192115919621e47aad78","modified":1472965568474},{"_id":"public/2016/04/26/deployHexoToGithub/index.html","hash":"772af8d581dc4e63a3405ef3f50bc8539eb7a64d","modified":1472965568474},{"_id":"public/archives/index.html","hash":"603089652ffb801711e2880ff5ae41ccd9101e8a","modified":1472965568474},{"_id":"public/archives/page/2/index.html","hash":"7b949c8ea36a43fc596108b055bf02d87bab3866","modified":1472965568474},{"_id":"public/archives/2016/index.html","hash":"0174157d17138719de6ff1305ee7ff8f1d195b84","modified":1472965568474},{"_id":"public/archives/2016/page/2/index.html","hash":"ef94a3fee4b5ca7f3a5ee94adaf9155e9e195453","modified":1472965568474},{"_id":"public/archives/2016/04/index.html","hash":"8fc4b5366498d02b87223f096168efb43ae0bdb6","modified":1472965568474},{"_id":"public/archives/2016/05/index.html","hash":"5410dd0ec6326ac1e4d7d9c3e0b1919e5f122e1a","modified":1472965568474},{"_id":"public/archives/2016/07/index.html","hash":"ccb3779cc78dfa4179505710336243e9f1d34e00","modified":1472965568474},{"_id":"public/categories/java/index.html","hash":"aa041525720c65dd024693b5e7359395375d75ad","modified":1472965568474},{"_id":"public/categories/github/index.html","hash":"57730a6e7cf29da0f5f7b08947cbbf8cf8d6a049","modified":1472965568474},{"_id":"public/categories/docker/index.html","hash":"405cbed0e6d8d14bd08cc8bdc63e8439fac162e0","modified":1472965568474},{"_id":"public/categories/hexo/index.html","hash":"57b85ac8b7e70a6eff7075bb1d412645e526f19f","modified":1472965568474},{"_id":"public/categories/ubuntu/index.html","hash":"8ea9cfa7ee8b1286b4beb1162b90652fdd2d2ced","modified":1472965568474},{"_id":"public/categories/mysql/index.html","hash":"9ce251a4f5468dfb31be852d300ee411f09f4e6e","modified":1472965568475},{"_id":"public/categories/Java/index.html","hash":"d3adfb8cba2d42403475ea381bfb347164b31fef","modified":1472965568475},{"_id":"public/categories/node-js/index.html","hash":"29026513a69c6ed3c2fed69d1ca55e388b9e523a","modified":1472965568475},{"_id":"public/categories/spring-boot/index.html","hash":"b220878fcfcdc72c997ccf5833b8c6f94f00603c","modified":1472965568475},{"_id":"public/page/2/index.html","hash":"fbc130f9f9b6127b353cbf93817a739c746f5ce9","modified":1472965568475},{"_id":"public/tags/gradle/index.html","hash":"e48fad06b049d32de687cfabeaaf0b83135925a1","modified":1472965568475},{"_id":"public/tags/java/index.html","hash":"d32dea22c7aa71c8ba9eef173cf65d22f435d3e4","modified":1472965568476},{"_id":"public/tags/github/index.html","hash":"57730a6e7cf29da0f5f7b08947cbbf8cf8d6a049","modified":1472965568476},{"_id":"public/tags/hexo/index.html","hash":"8b45ffc990289bc6b5419c8e29595b54e7c5db3e","modified":1472965568476},{"_id":"public/tags/facebook-comments/index.html","hash":"dd5a571d4d2a5177dc11b25af8cfed00573c9b87","modified":1472965568476},{"_id":"public/tags/SSL/index.html","hash":"438957dfd912b9828dafd06c023cf9d374f4ead4","modified":1472965568476},{"_id":"public/tags/nginx/index.html","hash":"e2d1c3d9cb73eb0fb6a423e3c00e5402354bbe5f","modified":1472965568476},{"_id":"public/tags/mysql/index.html","hash":"9ce251a4f5468dfb31be852d300ee411f09f4e6e","modified":1472965568476},{"_id":"public/tags/ubuntu/index.html","hash":"d29e81b3075cdcbd206c85046aa811fb08be3147","modified":1472965568476},{"_id":"public/tags/LinkedList/index.html","hash":"33477c2b47af88dba05ca5b55a68500f85e753e2","modified":1472965568476},{"_id":"public/tags/Line/index.html","hash":"e063cf6fb4f752cf14bcaaddd4b1840e19cc5a3c","modified":1472965568476},{"_id":"public/tags/https/index.html","hash":"19e563762bf6143a1b46aff2e395585c8b290f60","modified":1472965568476},{"_id":"public/tags/npm/index.html","hash":"01145be073c738255be814aad0b8721e7f053d33","modified":1472965568476},{"_id":"public/tags/web-service/index.html","hash":"48ed521b0dab8b3680b04a25e94bae6e11a855c8","modified":1472965568476},{"_id":"public/2016/07/28/implement-linkedlist-in-java/index.html","hash":"0b994d36777a439c758174d6c4c1d3b71d312d25","modified":1472965568476},{"_id":"public/index.html","hash":"dd415ecf0cc15d6afd389af6734cf137c4cde9c9","modified":1472965568476},{"_id":"public/2016/07/04/docker-use/docker_img.jpg","hash":"d783d4e15339ac23e7b01615e73e32856e93f48c","modified":1472965568482},{"_id":"public/2016/05/08/ubuntu-install-nginx/proxy_server.jpg","hash":"8522f4a1af30aeb0f0b24bb4e74ea31e0500dff2","modified":1472965568482},{"_id":"public/2016/05/01/npm-basic-command-line/example.png","hash":"3a0fe5a533286af4a14a771ea018d7f29497b9c3","modified":1472965568502},{"_id":"public/css/highlight.css","hash":"efc47af14506419d510aa511f07e9c96399d13b8","modified":1472965568506},{"_id":"public/css/normalize.css","hash":"d0fbef3dd405f26a5fdc896ca1f7875901782c6f","modified":1472965568506},{"_id":"public/css/very-simple.css","hash":"4027e48bf7d057b3775bf95fa74d303710a3d21c","modified":1472965568506}],"Category":[{"name":"java","_id":"ciso5o1yp0004s9lp774m446j"},{"name":"github","_id":"ciso5o1yu0009s9lpdbx6ouhj"},{"name":"docker","_id":"ciso5o1z6000es9lpmehu11mq"},{"name":"hexo","_id":"ciso5o1zb000ls9lp25xjz7gl"},{"name":"ubuntu","_id":"ciso5o1zl000rs9lplwunkjcy"},{"name":"mysql","_id":"ciso5o1zo000xs9lpwbiy6y22"},{"name":"Java","_id":"ciso5o1zp0010s9lpbrkky2ay"},{"name":"node.js","_id":"ciso5o1zr0018s9lprj1rl8pi"},{"name":"spring boot","_id":"ciso5o1zs001ds9lp93bwu9nd"}],"Data":[],"Page":[{"title":"about","date":"2016-04-26T04:48:53.000Z","_content":"\n我是Eric\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-04-26 12:48:53\n---\n\n我是Eric\n","updated":"2016-04-26T04:54:54.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciso5o1yj0001s9lp5u60upok","content":"<p>我是Eric</p>\n","excerpt":"","more":"<p>我是Eric</p>\n"}],"Post":[{"title":"gradle 基本使用","toc":true,"comments":1,"date":"2016-05-12T10:38:20.000Z","description":null,"_content":"### gradle 簡介\n* gradle 相對於 maven 也是一套 java project 的build tool，跟 maven 一樣都是套件管理工具\n\n### 整合Eclipse使用\n* 下載gradle 套件 `Gradle IDE Pack`\n* 建立`java project` or `dynamic web project`\n* 在project 的 root path 下建立 `build.gradle` file\n* `build.gradle` 簡易範例內容如下\n\n```gradle\napply plugin: 'java'\napply plugin: 'eclipse'\n\nsourceCompatibility = 1.5\nversion = '1.0'\njar {\n    manifest {\n        attributes 'Implementation-Title': 'Gradle Quickstart',\n                   'Implementation-Version': version\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\ncompile group:'commons-collections',name:'commons-collections',version:'3.2'\ntestCompile group: 'junit', name: 'junit', version: '4.+'\n}\n\ntest {\n    systemProperties 'property': 'value'\n}\n\nuploadArchives {\n    repositories {\n       flatDir {\n           dirs 'repos'\n       }\n    }\n}\n```\n### 常用gradle task\n\n* `gradle -u tasks` 列出目前有哪些task\n* `gradle -u dependencies` 列出套件的相依關係\n\n### 相關參考資源\n[spring io](https://spring.io/guides/gs/gradle/)\n[CodeData](http://www.codedata.com.tw/java/understanding-gradle-1-ant/)\n(http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin)\n","source":"_posts/common-gradle-use.md","raw":"---\ntitle: gradle 基本使用\ntoc: true\ncomments: true\ndate: 2016-05-12 18:38:20\ndescription:\ntags:\n    - gradle\n    - java\ncategories: java\n---\n### gradle 簡介\n* gradle 相對於 maven 也是一套 java project 的build tool，跟 maven 一樣都是套件管理工具\n\n### 整合Eclipse使用\n* 下載gradle 套件 `Gradle IDE Pack`\n* 建立`java project` or `dynamic web project`\n* 在project 的 root path 下建立 `build.gradle` file\n* `build.gradle` 簡易範例內容如下\n\n```gradle\napply plugin: 'java'\napply plugin: 'eclipse'\n\nsourceCompatibility = 1.5\nversion = '1.0'\njar {\n    manifest {\n        attributes 'Implementation-Title': 'Gradle Quickstart',\n                   'Implementation-Version': version\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\ncompile group:'commons-collections',name:'commons-collections',version:'3.2'\ntestCompile group: 'junit', name: 'junit', version: '4.+'\n}\n\ntest {\n    systemProperties 'property': 'value'\n}\n\nuploadArchives {\n    repositories {\n       flatDir {\n           dirs 'repos'\n       }\n    }\n}\n```\n### 常用gradle task\n\n* `gradle -u tasks` 列出目前有哪些task\n* `gradle -u dependencies` 列出套件的相依關係\n\n### 相關參考資源\n[spring io](https://spring.io/guides/gs/gradle/)\n[CodeData](http://www.codedata.com.tw/java/understanding-gradle-1-ant/)\n(http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin)\n","slug":"common-gradle-use","published":1,"updated":"2016-05-28T12:41:40.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1ye0000s9lpgvy1pm88","content":"<h3 id=\"gradle-簡介\"><a href=\"#gradle-簡介\" class=\"headerlink\" title=\"gradle 簡介\"></a>gradle 簡介</h3><ul>\n<li>gradle 相對於 maven 也是一套 java project 的build tool，跟 maven 一樣都是套件管理工具</li>\n</ul>\n<h3 id=\"整合Eclipse使用\"><a href=\"#整合Eclipse使用\" class=\"headerlink\" title=\"整合Eclipse使用\"></a>整合Eclipse使用</h3><ul>\n<li>下載gradle 套件 <code>Gradle IDE Pack</code></li>\n<li>建立<code>java project</code> or <code>dynamic web project</code></li>\n<li>在project 的 root path 下建立 <code>build.gradle</code> file</li>\n<li><code>build.gradle</code> 簡易範例內容如下</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'java'</span></span><br><span class=\"line\">apply plugin: <span class=\"string\">'eclipse'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">sourceCompatibility</span> = <span class=\"number\">1.5</span></span><br><span class=\"line\">version = <span class=\"string\">'1.0'</span></span><br><span class=\"line\">jar &#123;</span><br><span class=\"line\">    manifest &#123;</span><br><span class=\"line\">        attributes <span class=\"string\">'Implementation-Title'</span>: <span class=\"string\">'Gradle Quickstart'</span>,</span><br><span class=\"line\">                   <span class=\"string\">'Implementation-Version'</span>: version</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">group</span>:<span class=\"string\">'commons-collections'</span>,name:<span class=\"string\">'commons-collections'</span>,version:<span class=\"string\">'3.2'</span></span><br><span class=\"line\">testCompile <span class=\"keyword\">group</span>: <span class=\"string\">'junit'</span>, name: <span class=\"string\">'junit'</span>, version: <span class=\"string\">'4.+'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">test &#123;</span><br><span class=\"line\">    systemProperties <span class=\"string\">'property'</span>: <span class=\"string\">'value'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">uploadArchives &#123;</span><br><span class=\"line\">    <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">flatDir</span> &#123;</span><br><span class=\"line\">           dirs <span class=\"string\">'repos'</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用gradle-task\"><a href=\"#常用gradle-task\" class=\"headerlink\" title=\"常用gradle task\"></a>常用gradle task</h3><ul>\n<li><code>gradle -u tasks</code> 列出目前有哪些task</li>\n<li><code>gradle -u dependencies</code> 列出套件的相依關係</li>\n</ul>\n<h3 id=\"相關參考資源\"><a href=\"#相關參考資源\" class=\"headerlink\" title=\"相關參考資源\"></a>相關參考資源</h3><p><a href=\"https://spring.io/guides/gs/gradle/\" target=\"_blank\" rel=\"external\">spring io</a><br><a href=\"http://www.codedata.com.tw/java/understanding-gradle-1-ant/\" target=\"_blank\" rel=\"external\">CodeData</a><br>(<a href=\"http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin\" target=\"_blank\" rel=\"external\">http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin</a>)</p>\n","excerpt":"","more":"<h3 id=\"gradle-簡介\"><a href=\"#gradle-簡介\" class=\"headerlink\" title=\"gradle 簡介\"></a>gradle 簡介</h3><ul>\n<li>gradle 相對於 maven 也是一套 java project 的build tool，跟 maven 一樣都是套件管理工具</li>\n</ul>\n<h3 id=\"整合Eclipse使用\"><a href=\"#整合Eclipse使用\" class=\"headerlink\" title=\"整合Eclipse使用\"></a>整合Eclipse使用</h3><ul>\n<li>下載gradle 套件 <code>Gradle IDE Pack</code></li>\n<li>建立<code>java project</code> or <code>dynamic web project</code></li>\n<li>在project 的 root path 下建立 <code>build.gradle</code> file</li>\n<li><code>build.gradle</code> 簡易範例內容如下</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'java'</span></span><br><span class=\"line\">apply plugin: <span class=\"string\">'eclipse'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">sourceCompatibility</span> = <span class=\"number\">1.5</span></span><br><span class=\"line\">version = <span class=\"string\">'1.0'</span></span><br><span class=\"line\">jar &#123;</span><br><span class=\"line\">    manifest &#123;</span><br><span class=\"line\">        attributes <span class=\"string\">'Implementation-Title'</span>: <span class=\"string\">'Gradle Quickstart'</span>,</span><br><span class=\"line\">                   <span class=\"string\">'Implementation-Version'</span>: version</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">group</span>:<span class=\"string\">'commons-collections'</span>,name:<span class=\"string\">'commons-collections'</span>,version:<span class=\"string\">'3.2'</span></span><br><span class=\"line\">testCompile <span class=\"keyword\">group</span>: <span class=\"string\">'junit'</span>, name: <span class=\"string\">'junit'</span>, version: <span class=\"string\">'4.+'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">test &#123;</span><br><span class=\"line\">    systemProperties <span class=\"string\">'property'</span>: <span class=\"string\">'value'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">uploadArchives &#123;</span><br><span class=\"line\">    <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">flatDir</span> &#123;</span><br><span class=\"line\">           dirs <span class=\"string\">'repos'</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用gradle-task\"><a href=\"#常用gradle-task\" class=\"headerlink\" title=\"常用gradle task\"></a>常用gradle task</h3><ul>\n<li><code>gradle -u tasks</code> 列出目前有哪些task</li>\n<li><code>gradle -u dependencies</code> 列出套件的相依關係</li>\n</ul>\n<h3 id=\"相關參考資源\"><a href=\"#相關參考資源\" class=\"headerlink\" title=\"相關參考資源\"></a>相關參考資源</h3><p><a href=\"https://spring.io/guides/gs/gradle/\">spring io</a><br><a href=\"http://www.codedata.com.tw/java/understanding-gradle-1-ant/\">CodeData</a><br>(<a href=\"http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin\">http://www.journaldev.com/8118/java-simple-example-with-gradle-eclipse-plugin</a>)</p>\n"},{"title":"在github上架設hexo","date":"2016-04-26T04:56:26.000Z","comments":1,"toc":true,"description":"這篇是在講如何在github的靜態頁面上架設hexo blog framework","_content":"### 申請github帳號\n\n### install nodejs\n* 上[nodejs](https://nodejs.org/en/)的官網下載並安裝\n\n### npm install hexo\n* 上[hexo](https://hexo.io/zh-tw/)的官網有安裝教學\n\n```bash\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n### 在github上建立repositories\n* 建立的專案名稱eric_profile\n\n### 將專案發佈上github page\n* 到該專案的`settings`設定`github pages`點選`launch automatic page generaotr` 一路照預設的點next\n* 建立完後會建立 branch 為`gh-pages`，只有在這個branch下的才會在github pages上顯示，網址是https://username.github.io/eric_profile/\n\n\n### 設定hexo deploy to github\n* 修改 `_config.yml` 設定deploy git 資訊\n\n```yml\ndeploy:\n\ttype: git\n\trepository: git@github.com:force416/eric_profile.git\n\tbranch: gh-pages\n```\n\n\n### 產生檔案 & deploy\n\n```bash\n$ hexo generate\n$ hexo deploy\n```\n","source":"_posts/deployHexoToGithub.md","raw":"---\ntitle: 在github上架設hexo\ndate: 2016-04-26 12:56:26\ntags:\n\t- github\n\t- hexo\ncategories: github\ncomments: true\ntoc: true\ndescription: 這篇是在講如何在github的靜態頁面上架設hexo blog framework\n---\n### 申請github帳號\n\n### install nodejs\n* 上[nodejs](https://nodejs.org/en/)的官網下載並安裝\n\n### npm install hexo\n* 上[hexo](https://hexo.io/zh-tw/)的官網有安裝教學\n\n```bash\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n### 在github上建立repositories\n* 建立的專案名稱eric_profile\n\n### 將專案發佈上github page\n* 到該專案的`settings`設定`github pages`點選`launch automatic page generaotr` 一路照預設的點next\n* 建立完後會建立 branch 為`gh-pages`，只有在這個branch下的才會在github pages上顯示，網址是https://username.github.io/eric_profile/\n\n\n### 設定hexo deploy to github\n* 修改 `_config.yml` 設定deploy git 資訊\n\n```yml\ndeploy:\n\ttype: git\n\trepository: git@github.com:force416/eric_profile.git\n\tbranch: gh-pages\n```\n\n\n### 產生檔案 & deploy\n\n```bash\n$ hexo generate\n$ hexo deploy\n```\n","slug":"deployHexoToGithub","published":1,"updated":"2016-04-28T08:22:59.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1yk0002s9lpbtsgr8k5","content":"<h3 id=\"申請github帳號\"><a href=\"#申請github帳號\" class=\"headerlink\" title=\"申請github帳號\"></a>申請github帳號</h3><h3 id=\"install-nodejs\"><a href=\"#install-nodejs\" class=\"headerlink\" title=\"install nodejs\"></a>install nodejs</h3><ul>\n<li>上<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">nodejs</a>的官網下載並安裝</li>\n</ul>\n<h3 id=\"npm-install-hexo\"><a href=\"#npm-install-hexo\" class=\"headerlink\" title=\"npm install hexo\"></a>npm install hexo</h3><ul>\n<li>上<a href=\"https://hexo.io/zh-tw/\" target=\"_blank\" rel=\"external\">hexo</a>的官網有安裝教學</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">$ hexo init blog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"在github上建立repositories\"><a href=\"#在github上建立repositories\" class=\"headerlink\" title=\"在github上建立repositories\"></a>在github上建立repositories</h3><ul>\n<li>建立的專案名稱eric_profile</li>\n</ul>\n<h3 id=\"將專案發佈上github-page\"><a href=\"#將專案發佈上github-page\" class=\"headerlink\" title=\"將專案發佈上github page\"></a>將專案發佈上github page</h3><ul>\n<li>到該專案的<code>settings</code>設定<code>github pages</code>點選<code>launch automatic page generaotr</code> 一路照預設的點next</li>\n<li>建立完後會建立 branch 為<code>gh-pages</code>，只有在這個branch下的才會在github pages上顯示，網址是<a href=\"https://username.github.io/eric_profile/\" target=\"_blank\" rel=\"external\">https://username.github.io/eric_profile/</a></li>\n</ul>\n<h3 id=\"設定hexo-deploy-to-github\"><a href=\"#設定hexo-deploy-to-github\" class=\"headerlink\" title=\"設定hexo deploy to github\"></a>設定hexo deploy to github</h3><ul>\n<li>修改 <code>_config.yml</code> 設定deploy git 資訊</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepository: git@github.com:force416/eric_profile.git</span><br><span class=\"line\">\tbranch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"產生檔案-amp-deploy\"><a href=\"#產生檔案-amp-deploy\" class=\"headerlink\" title=\"產生檔案 &amp; deploy\"></a>產生檔案 &amp; deploy</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"申請github帳號\"><a href=\"#申請github帳號\" class=\"headerlink\" title=\"申請github帳號\"></a>申請github帳號</h3><h3 id=\"install-nodejs\"><a href=\"#install-nodejs\" class=\"headerlink\" title=\"install nodejs\"></a>install nodejs</h3><ul>\n<li>上<a href=\"https://nodejs.org/en/\">nodejs</a>的官網下載並安裝</li>\n</ul>\n<h3 id=\"npm-install-hexo\"><a href=\"#npm-install-hexo\" class=\"headerlink\" title=\"npm install hexo\"></a>npm install hexo</h3><ul>\n<li>上<a href=\"https://hexo.io/zh-tw/\">hexo</a>的官網有安裝教學</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">$ hexo init blog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"在github上建立repositories\"><a href=\"#在github上建立repositories\" class=\"headerlink\" title=\"在github上建立repositories\"></a>在github上建立repositories</h3><ul>\n<li>建立的專案名稱eric_profile</li>\n</ul>\n<h3 id=\"將專案發佈上github-page\"><a href=\"#將專案發佈上github-page\" class=\"headerlink\" title=\"將專案發佈上github page\"></a>將專案發佈上github page</h3><ul>\n<li>到該專案的<code>settings</code>設定<code>github pages</code>點選<code>launch automatic page generaotr</code> 一路照預設的點next</li>\n<li>建立完後會建立 branch 為<code>gh-pages</code>，只有在這個branch下的才會在github pages上顯示，網址是<a href=\"https://username.github.io/eric_profile/\">https://username.github.io/eric_profile/</a></li>\n</ul>\n<h3 id=\"設定hexo-deploy-to-github\"><a href=\"#設定hexo-deploy-to-github\" class=\"headerlink\" title=\"設定hexo deploy to github\"></a>設定hexo deploy to github</h3><ul>\n<li>修改 <code>_config.yml</code> 設定deploy git 資訊</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepository: git@github.com:force416/eric_profile.git</span><br><span class=\"line\">\tbranch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"產生檔案-amp-deploy\"><a href=\"#產生檔案-amp-deploy\" class=\"headerlink\" title=\"產生檔案 &amp; deploy\"></a>產生檔案 &amp; deploy</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n"},{"title":"docker 基本教學","toc":true,"comments":1,"date":"2016-07-04T03:37:01.000Z","description":null,"_content":"### docker 介紹\n* 關於docker 可以用張圖片解釋 [圖片出處](https://hackpad.com/ep/pad/static/ZwP4hGtPaJB)\n{% asset_img docker_img.jpg %}\n\n* 基本上要搞清楚 `host`、`image`、`container`、`dockerfile`之間的關係\n\n* [docker官網的Repositories](https://hub.docker.com/)\n提供`imgae`下載，包含`ubuntu`、`mysql`、`mongodb`各式image\n\n### docker install\n* [官網 ubuntu docker 安裝教學](https://docs.docker.com/engine/installation/linux/ubuntulinux/) 各版本的linux安裝方式各有不同\n\n### docker cli\n* 最基本的docker run 執行一個`ubuntu` (:後面是image的tag版本14.04)的`container` 印出Hello world\n``` bash\n$ docker run ubuntu:14.04 /bin/echo 'Hello world'\nHello world\n```\n* 更多指令在終端機執行docker 就會列出有哪些指令可以用了\n\n### docker 參考\n(https://docs.docker.com/) docker官網文件\n(https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker —— 從入門到實踐­》\n","source":"_posts/docker-use.md","raw":"---\ntitle: docker 基本教學\ntoc: true\ncomments: true\ndate: 2016-07-04 11:37:01\ndescription:\ntags:\ncategories: docker\n---\n### docker 介紹\n* 關於docker 可以用張圖片解釋 [圖片出處](https://hackpad.com/ep/pad/static/ZwP4hGtPaJB)\n{% asset_img docker_img.jpg %}\n\n* 基本上要搞清楚 `host`、`image`、`container`、`dockerfile`之間的關係\n\n* [docker官網的Repositories](https://hub.docker.com/)\n提供`imgae`下載，包含`ubuntu`、`mysql`、`mongodb`各式image\n\n### docker install\n* [官網 ubuntu docker 安裝教學](https://docs.docker.com/engine/installation/linux/ubuntulinux/) 各版本的linux安裝方式各有不同\n\n### docker cli\n* 最基本的docker run 執行一個`ubuntu` (:後面是image的tag版本14.04)的`container` 印出Hello world\n``` bash\n$ docker run ubuntu:14.04 /bin/echo 'Hello world'\nHello world\n```\n* 更多指令在終端機執行docker 就會列出有哪些指令可以用了\n\n### docker 參考\n(https://docs.docker.com/) docker官網文件\n(https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker —— 從入門到實踐­》\n","slug":"docker-use","published":1,"updated":"2016-07-04T06:10:56.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1yp0005s9lphyn91qsh","content":"<h3 id=\"docker-介紹\"><a href=\"#docker-介紹\" class=\"headerlink\" title=\"docker 介紹\"></a>docker 介紹</h3><ul>\n<li><p>關於docker 可以用張圖片解釋 <a href=\"https://hackpad.com/ep/pad/static/ZwP4hGtPaJB\" target=\"_blank\" rel=\"external\">圖片出處</a></p>\n<img src=\"/eric_profile/2016/07/04/docker-use/docker_img.jpg\" alt=\"docker_img.jpg\" title=\"\">\n</li>\n<li><p>基本上要搞清楚 <code>host</code>、<code>image</code>、<code>container</code>、<code>dockerfile</code>之間的關係</p>\n</li>\n<li><p><a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"external\">docker官網的Repositories</a><br>提供<code>imgae</code>下載，包含<code>ubuntu</code>、<code>mysql</code>、<code>mongodb</code>各式image</p>\n</li>\n</ul>\n<h3 id=\"docker-install\"><a href=\"#docker-install\" class=\"headerlink\" title=\"docker install\"></a>docker install</h3><ul>\n<li><a href=\"https://docs.docker.com/engine/installation/linux/ubuntulinux/\" target=\"_blank\" rel=\"external\">官網 ubuntu docker 安裝教學</a> 各版本的linux安裝方式各有不同</li>\n</ul>\n<h3 id=\"docker-cli\"><a href=\"#docker-cli\" class=\"headerlink\" title=\"docker cli\"></a>docker cli</h3><ul>\n<li><p>最基本的docker run 執行一個<code>ubuntu</code> (:後面是image的tag版本14.04)的<code>container</code> 印出Hello world</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run ubuntu:14.04 /bin/<span class=\"built_in\">echo</span> <span class=\"string\">'Hello world'</span></span><br><span class=\"line\">Hello world</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更多指令在終端機執行docker 就會列出有哪些指令可以用了</p>\n</li>\n</ul>\n<h3 id=\"docker-參考\"><a href=\"#docker-參考\" class=\"headerlink\" title=\"docker 參考\"></a>docker 參考</h3><p>(<a href=\"https://docs.docker.com/\" target=\"_blank\" rel=\"external\">https://docs.docker.com/</a>) docker官網文件<br>(<a href=\"https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker\" target=\"_blank\" rel=\"external\">https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker</a> —— 從入門到實踐­》</p>\n","excerpt":"","more":"<h3 id=\"docker-介紹\"><a href=\"#docker-介紹\" class=\"headerlink\" title=\"docker 介紹\"></a>docker 介紹</h3><ul>\n<li><p>關於docker 可以用張圖片解釋 <a href=\"https://hackpad.com/ep/pad/static/ZwP4hGtPaJB\">圖片出處</a></p>\n<img src=\"/eric_profile/2016/07/04/docker-use/docker_img.jpg\" alt=\"docker_img.jpg\" title=\"\">\n</li>\n<li><p>基本上要搞清楚 <code>host</code>、<code>image</code>、<code>container</code>、<code>dockerfile</code>之間的關係</p>\n</li>\n<li><p><a href=\"https://hub.docker.com/\">docker官網的Repositories</a><br>提供<code>imgae</code>下載，包含<code>ubuntu</code>、<code>mysql</code>、<code>mongodb</code>各式image</p>\n</li>\n</ul>\n<h3 id=\"docker-install\"><a href=\"#docker-install\" class=\"headerlink\" title=\"docker install\"></a>docker install</h3><ul>\n<li><a href=\"https://docs.docker.com/engine/installation/linux/ubuntulinux/\">官網 ubuntu docker 安裝教學</a> 各版本的linux安裝方式各有不同</li>\n</ul>\n<h3 id=\"docker-cli\"><a href=\"#docker-cli\" class=\"headerlink\" title=\"docker cli\"></a>docker cli</h3><ul>\n<li><p>最基本的docker run 執行一個<code>ubuntu</code> (:後面是image的tag版本14.04)的<code>container</code> 印出Hello world</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run ubuntu:14.04 /bin/<span class=\"built_in\">echo</span> <span class=\"string\">'Hello world'</span></span><br><span class=\"line\">Hello world</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更多指令在終端機執行docker 就會列出有哪些指令可以用了</p>\n</li>\n</ul>\n<h3 id=\"docker-參考\"><a href=\"#docker-參考\" class=\"headerlink\" title=\"docker 參考\"></a>docker 參考</h3><p>(<a href=\"https://docs.docker.com/\">https://docs.docker.com/</a>) docker官網文件<br>(<a href=\"https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker\">https://www.gitbook.com/book/philipzheng/docker_practice/details)《Docker</a> —— 從入門到實踐­》</p>\n"},{"title":"hexo套用fb的comments","date":"2016-04-26T12:06:17.000Z","comments":1,"toc":true,"description":"如何套用facebook comments的功能","_content":"### 申請fb開發者應用程式ID\n* 上fb的[開發者網站](https://developers.facebook.com/)的官網註冊應用程式網站\n\n### 套用至網站\n* 上 [fb embedded comments](https://developers.facebook.com/docs/plugins/embedded-comments) 取得內嵌程式的code\n* 貼入`<body />`裡\n```javascript\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n  var js, fjs = d.getElementsByTagName(s)[0];\n  if (d.getElementById(id)) return;\n  js = d.createElement(s); js.id = id;\n  js.src = \"//connect.facebook.net/zh_TW/sdk.js#xfbml=1&version=v2.6&appId=8\";\n  fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));</script>\n```\n\n* 貼入想呈現留言區塊的地方\n```javascript\n<div class=\"fb-comment-embed\" data-href=\"${抓取目前文章的網址}\" data-width=\"560\" data-include-parent=\"false\"></div>\n```\n\n### 開始使用\n","source":"_posts/fb_comments.md","raw":"---\ntitle: hexo套用fb的comments\ndate: 2016-04-26 20:06:17\ntags:\n\t- facebook comments\n\t- hexo\ncategories: hexo\ncomments: true\ntoc: true\ndescription: 如何套用facebook comments的功能\n---\n### 申請fb開發者應用程式ID\n* 上fb的[開發者網站](https://developers.facebook.com/)的官網註冊應用程式網站\n\n### 套用至網站\n* 上 [fb embedded comments](https://developers.facebook.com/docs/plugins/embedded-comments) 取得內嵌程式的code\n* 貼入`<body />`裡\n```javascript\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n  var js, fjs = d.getElementsByTagName(s)[0];\n  if (d.getElementById(id)) return;\n  js = d.createElement(s); js.id = id;\n  js.src = \"//connect.facebook.net/zh_TW/sdk.js#xfbml=1&version=v2.6&appId=8\";\n  fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));</script>\n```\n\n* 貼入想呈現留言區塊的地方\n```javascript\n<div class=\"fb-comment-embed\" data-href=\"${抓取目前文章的網址}\" data-width=\"560\" data-include-parent=\"false\"></div>\n```\n\n### 開始使用\n","slug":"fb_comments","published":1,"updated":"2016-09-04T04:57:10.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1ys0006s9lpmp3a969y","content":"<h3 id=\"申請fb開發者應用程式ID\"><a href=\"#申請fb開發者應用程式ID\" class=\"headerlink\" title=\"申請fb開發者應用程式ID\"></a>申請fb開發者應用程式ID</h3><ul>\n<li>上fb的<a href=\"https://developers.facebook.com/\" target=\"_blank\" rel=\"external\">開發者網站</a>的官網註冊應用程式網站</li>\n</ul>\n<h3 id=\"套用至網站\"><a href=\"#套用至網站\" class=\"headerlink\" title=\"套用至網站\"></a>套用至網站</h3><ul>\n<li>上 <a href=\"https://developers.facebook.com/docs/plugins/embedded-comments\" target=\"_blank\" rel=\"external\">fb embedded comments</a> 取得內嵌程式的code</li>\n<li><p>貼入<code>&lt;body /&gt;</code>裡</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"fb-root\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, s, id</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> js, fjs = d.getElementsByTagName(s)[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (d.getElementById(id)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  js = d.createElement(s); js.id = id;</span><br><span class=\"line\">  js.src = <span class=\"string\">\"//connect.facebook.net/zh_TW/sdk.js#xfbml=1&amp;version=v2.6&amp;appId=8\"</span>;</span><br><span class=\"line\">  fjs.parentNode.insertBefore(js, fjs);</span><br><span class=\"line\">&#125;(<span class=\"built_in\">document</span>, <span class=\"string\">'script'</span>, <span class=\"string\">'facebook-jssdk'</span>));&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>貼入想呈現留言區塊的地方</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fb-comment-embed\"</span> data-href=<span class=\"string\">\"$&#123;抓取目前文章的網址&#125;\"</span> data-width=<span class=\"string\">\"560\"</span> data-include-parent=<span class=\"string\">\"false\"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"開始使用\"><a href=\"#開始使用\" class=\"headerlink\" title=\"開始使用\"></a>開始使用</h3>","excerpt":"","more":"<h3 id=\"申請fb開發者應用程式ID\"><a href=\"#申請fb開發者應用程式ID\" class=\"headerlink\" title=\"申請fb開發者應用程式ID\"></a>申請fb開發者應用程式ID</h3><ul>\n<li>上fb的<a href=\"https://developers.facebook.com/\">開發者網站</a>的官網註冊應用程式網站</li>\n</ul>\n<h3 id=\"套用至網站\"><a href=\"#套用至網站\" class=\"headerlink\" title=\"套用至網站\"></a>套用至網站</h3><ul>\n<li>上 <a href=\"https://developers.facebook.com/docs/plugins/embedded-comments\">fb embedded comments</a> 取得內嵌程式的code</li>\n<li><p>貼入<code>&lt;body /&gt;</code>裡</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"fb-root\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, s, id</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> js, fjs = d.getElementsByTagName(s)[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (d.getElementById(id)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  js = d.createElement(s); js.id = id;</span><br><span class=\"line\">  js.src = <span class=\"string\">\"//connect.facebook.net/zh_TW/sdk.js#xfbml=1&amp;version=v2.6&amp;appId=8\"</span>;</span><br><span class=\"line\">  fjs.parentNode.insertBefore(js, fjs);</span><br><span class=\"line\">&#125;(<span class=\"built_in\">document</span>, <span class=\"string\">'script'</span>, <span class=\"string\">'facebook-jssdk'</span>));&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>貼入想呈現留言區塊的地方</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fb-comment-embed\"</span> data-href=<span class=\"string\">\"$&#123;抓取目前文章的網址&#125;\"</span> data-width=<span class=\"string\">\"560\"</span> data-include-parent=<span class=\"string\">\"false\"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"開始使用\"><a href=\"#開始使用\" class=\"headerlink\" title=\"開始使用\"></a>開始使用</h3>"},{"title":"go daddy買ssl & Nginx 安裝","toc":true,"comments":1,"date":"2016-07-21T00:21:15.000Z","description":null,"_content":"### 在本機產生憑證\n* 透過openssl 產生憑證檔\n``` bash\nopenssl req -new -newkey rsa:2048 -nodes -keyout yourdomain.key -out yourdomain.csr\n```\n* 輸入申請資料 常用名/機構/組織/城市/州或省/國家 等等資訊\n\n### godaddy domain 管理介面\n* 開始剛剛產生的`.csr`檔案，在godaddy的介面上輸入\n\n### 從godaddy下載SSL憑證檔案\n\n### 安裝至nginx伺服器上\n* 需先將剛下載的兩個檔案合併為一個檔\n* 安裝是nginx上，設定如下\n\n### 設定 nginx 伺服器\n* 需先將剛下載的兩個檔案合併為一個檔\n```bash\n$ sudo cat your_domain_name.crt DigiCertCA.crt >> bundle.crt\n```\n* 編輯 nginx 的設定檔\n```bash\n$ sudo vi /etc/nginx/sites-available/default\n```\n* 加入以下設定\n```txt\nupstream app_server {\n    server 127.0.0.1:8080 fail_timeout=0;\n}\n\nserver {\n        listen 443;\n        server_name localhost;\n\n        #root html;\n        #index index.html index.htm;\n\n        ssl on;\n        #設定憑證金鑰的路徑\n        ssl_certificate bundle.crt;\n        ssl_certificate_key yourdomain.key;\n\n        location / {\n                proxy_pass http://app_server;\n        }\n}\n```\n\n### 重新啟動 nginx\n```bash\n$ sudo service nginx restart\n```\n","source":"_posts/godaddy-ssl-and-nginx-install.md","raw":"---\ntitle: go daddy買ssl & Nginx 安裝\ntoc: true\ncomments: true\ndate: 2016-07-21 08:21:15\ndescription:\ntags:\n    - SSL\n    - nginx\ncategories: ubuntu\n---\n### 在本機產生憑證\n* 透過openssl 產生憑證檔\n``` bash\nopenssl req -new -newkey rsa:2048 -nodes -keyout yourdomain.key -out yourdomain.csr\n```\n* 輸入申請資料 常用名/機構/組織/城市/州或省/國家 等等資訊\n\n### godaddy domain 管理介面\n* 開始剛剛產生的`.csr`檔案，在godaddy的介面上輸入\n\n### 從godaddy下載SSL憑證檔案\n\n### 安裝至nginx伺服器上\n* 需先將剛下載的兩個檔案合併為一個檔\n* 安裝是nginx上，設定如下\n\n### 設定 nginx 伺服器\n* 需先將剛下載的兩個檔案合併為一個檔\n```bash\n$ sudo cat your_domain_name.crt DigiCertCA.crt >> bundle.crt\n```\n* 編輯 nginx 的設定檔\n```bash\n$ sudo vi /etc/nginx/sites-available/default\n```\n* 加入以下設定\n```txt\nupstream app_server {\n    server 127.0.0.1:8080 fail_timeout=0;\n}\n\nserver {\n        listen 443;\n        server_name localhost;\n\n        #root html;\n        #index index.html index.htm;\n\n        ssl on;\n        #設定憑證金鑰的路徑\n        ssl_certificate bundle.crt;\n        ssl_certificate_key yourdomain.key;\n\n        location / {\n                proxy_pass http://app_server;\n        }\n}\n```\n\n### 重新啟動 nginx\n```bash\n$ sudo service nginx restart\n```\n","slug":"godaddy-ssl-and-nginx-install","published":1,"updated":"2016-07-29T01:53:03.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1yt0008s9lpobz5n0nq","content":"<h3 id=\"在本機產生憑證\"><a href=\"#在本機產生憑證\" class=\"headerlink\" title=\"在本機產生憑證\"></a>在本機產生憑證</h3><ul>\n<li><p>透過openssl 產生憑證檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -new -newkey rsa:2048 -nodes -keyout yourdomain.key -out yourdomain.csr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>輸入申請資料 常用名/機構/組織/城市/州或省/國家 等等資訊</p>\n</li>\n</ul>\n<h3 id=\"godaddy-domain-管理介面\"><a href=\"#godaddy-domain-管理介面\" class=\"headerlink\" title=\"godaddy domain 管理介面\"></a>godaddy domain 管理介面</h3><ul>\n<li>開始剛剛產生的<code>.csr</code>檔案，在godaddy的介面上輸入</li>\n</ul>\n<h3 id=\"從godaddy下載SSL憑證檔案\"><a href=\"#從godaddy下載SSL憑證檔案\" class=\"headerlink\" title=\"從godaddy下載SSL憑證檔案\"></a>從godaddy下載SSL憑證檔案</h3><h3 id=\"安裝至nginx伺服器上\"><a href=\"#安裝至nginx伺服器上\" class=\"headerlink\" title=\"安裝至nginx伺服器上\"></a>安裝至nginx伺服器上</h3><ul>\n<li>需先將剛下載的兩個檔案合併為一個檔</li>\n<li>安裝是nginx上，設定如下</li>\n</ul>\n<h3 id=\"設定-nginx-伺服器\"><a href=\"#設定-nginx-伺服器\" class=\"headerlink\" title=\"設定 nginx 伺服器\"></a>設定 nginx 伺服器</h3><ul>\n<li><p>需先將剛下載的兩個檔案合併為一個檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat your_domain_name.crt DigiCertCA.crt &gt;&gt; bundle.crt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>編輯 nginx 的設定檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入以下設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream app_server &#123;</span><br><span class=\"line\">    server 127.0.0.1:8080 fail_timeout=0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        #root html;</span><br><span class=\"line\">        #index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl on;</span><br><span class=\"line\">        #設定憑證金鑰的路徑</span><br><span class=\"line\">        ssl_certificate bundle.crt;</span><br><span class=\"line\">        ssl_certificate_key yourdomain.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://app_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"重新啟動-nginx\"><a href=\"#重新啟動-nginx\" class=\"headerlink\" title=\"重新啟動 nginx\"></a>重新啟動 nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"在本機產生憑證\"><a href=\"#在本機產生憑證\" class=\"headerlink\" title=\"在本機產生憑證\"></a>在本機產生憑證</h3><ul>\n<li><p>透過openssl 產生憑證檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -new -newkey rsa:2048 -nodes -keyout yourdomain.key -out yourdomain.csr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>輸入申請資料 常用名/機構/組織/城市/州或省/國家 等等資訊</p>\n</li>\n</ul>\n<h3 id=\"godaddy-domain-管理介面\"><a href=\"#godaddy-domain-管理介面\" class=\"headerlink\" title=\"godaddy domain 管理介面\"></a>godaddy domain 管理介面</h3><ul>\n<li>開始剛剛產生的<code>.csr</code>檔案，在godaddy的介面上輸入</li>\n</ul>\n<h3 id=\"從godaddy下載SSL憑證檔案\"><a href=\"#從godaddy下載SSL憑證檔案\" class=\"headerlink\" title=\"從godaddy下載SSL憑證檔案\"></a>從godaddy下載SSL憑證檔案</h3><h3 id=\"安裝至nginx伺服器上\"><a href=\"#安裝至nginx伺服器上\" class=\"headerlink\" title=\"安裝至nginx伺服器上\"></a>安裝至nginx伺服器上</h3><ul>\n<li>需先將剛下載的兩個檔案合併為一個檔</li>\n<li>安裝是nginx上，設定如下</li>\n</ul>\n<h3 id=\"設定-nginx-伺服器\"><a href=\"#設定-nginx-伺服器\" class=\"headerlink\" title=\"設定 nginx 伺服器\"></a>設定 nginx 伺服器</h3><ul>\n<li><p>需先將剛下載的兩個檔案合併為一個檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo cat your_domain_name.crt DigiCertCA.crt &gt;&gt; bundle.crt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>編輯 nginx 的設定檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入以下設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream app_server &#123;</span><br><span class=\"line\">    server 127.0.0.1:8080 fail_timeout=0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        #root html;</span><br><span class=\"line\">        #index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl on;</span><br><span class=\"line\">        #設定憑證金鑰的路徑</span><br><span class=\"line\">        ssl_certificate bundle.crt;</span><br><span class=\"line\">        ssl_certificate_key yourdomain.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://app_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"重新啟動-nginx\"><a href=\"#重新啟動-nginx\" class=\"headerlink\" title=\"重新啟動 nginx\"></a>重新啟動 nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n"},{"title":"在ubuntu上安裝mysql db","comments":1,"date":"2016-04-27T06:41:31.000Z","toc":true,"description":"這篇是描述如何在ubuntu上安裝mysql的過程","_content":"### 透過 apt-get 安裝\n\n```bash\n#更新apt-get 套件\n$ sudo apt-get update\n$ sudo apt-get upgrade\n\n#安裝mysql\n$ sudo apt-get install mysql-server\n```\n### 安裝 mysql_secure_installation\n\n```bash\n$ sudo mysql_secure_installation\n```\n\n### 調整可連線的IP\n\n* 一般預設都是只能給本機(127.0.0.1)連線，如果要給外部的ip連線則需修改設定檔\n\n```xml\n#/etc/mysql/my.cnf\n\n...\n#允許任意ip連線\nbind_address = 0.0.0.0\n...\n\n```\n\n### 注意事項\n* 安裝完mysql預設的port是3306\n* 如果ubuntu是aws 的 ec2 則需注意security group是否有開起mysql的port 3306\n","source":"_posts/install-mysqldb-on-ubuntu.md","raw":"---\ntitle: 在ubuntu上安裝mysql db\ncomments: true\ndate: 2016-04-27 14:41:31\ntags:\n  - mysql\n  - ubuntu\ntoc: true\ndescription: 這篇是描述如何在ubuntu上安裝mysql的過程\ncategories: mysql\n---\n### 透過 apt-get 安裝\n\n```bash\n#更新apt-get 套件\n$ sudo apt-get update\n$ sudo apt-get upgrade\n\n#安裝mysql\n$ sudo apt-get install mysql-server\n```\n### 安裝 mysql_secure_installation\n\n```bash\n$ sudo mysql_secure_installation\n```\n\n### 調整可連線的IP\n\n* 一般預設都是只能給本機(127.0.0.1)連線，如果要給外部的ip連線則需修改設定檔\n\n```xml\n#/etc/mysql/my.cnf\n\n...\n#允許任意ip連線\nbind_address = 0.0.0.0\n...\n\n```\n\n### 注意事項\n* 安裝完mysql預設的port是3306\n* 如果ubuntu是aws 的 ec2 則需注意security group是否有開起mysql的port 3306\n","slug":"install-mysqldb-on-ubuntu","published":1,"updated":"2016-04-30T03:20:12.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1yv000as9lp5avglxiu","content":"<h3 id=\"透過-apt-get-安裝\"><a href=\"#透過-apt-get-安裝\" class=\"headerlink\" title=\"透過 apt-get 安裝\"></a>透過 apt-get 安裝</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#更新apt-get 套件</span></span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get upgrade</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安裝mysql</span></span><br><span class=\"line\">$ sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"安裝-mysql-secure-installation\"><a href=\"#安裝-mysql-secure-installation\" class=\"headerlink\" title=\"安裝 mysql_secure_installation\"></a>安裝 mysql_secure_installation</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<h3 id=\"調整可連線的IP\"><a href=\"#調整可連線的IP\" class=\"headerlink\" title=\"調整可連線的IP\"></a>調整可連線的IP</h3><ul>\n<li>一般預設都是只能給本機(127.0.0.1)連線，如果要給外部的ip連線則需修改設定檔</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#/etc/mysql/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">#允許任意ip連線</span><br><span class=\"line\">bind_address = 0.0.0.0</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事項\"><a href=\"#注意事項\" class=\"headerlink\" title=\"注意事項\"></a>注意事項</h3><ul>\n<li>安裝完mysql預設的port是3306</li>\n<li>如果ubuntu是aws 的 ec2 則需注意security group是否有開起mysql的port 3306</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"透過-apt-get-安裝\"><a href=\"#透過-apt-get-安裝\" class=\"headerlink\" title=\"透過 apt-get 安裝\"></a>透過 apt-get 安裝</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#更新apt-get 套件</span></span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get upgrade</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安裝mysql</span></span><br><span class=\"line\">$ sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"安裝-mysql-secure-installation\"><a href=\"#安裝-mysql-secure-installation\" class=\"headerlink\" title=\"安裝 mysql_secure_installation\"></a>安裝 mysql_secure_installation</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<h3 id=\"調整可連線的IP\"><a href=\"#調整可連線的IP\" class=\"headerlink\" title=\"調整可連線的IP\"></a>調整可連線的IP</h3><ul>\n<li>一般預設都是只能給本機(127.0.0.1)連線，如果要給外部的ip連線則需修改設定檔</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#/etc/mysql/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">#允許任意ip連線</span><br><span class=\"line\">bind_address = 0.0.0.0</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事項\"><a href=\"#注意事項\" class=\"headerlink\" title=\"注意事項\"></a>注意事項</h3><ul>\n<li>安裝完mysql預設的port是3306</li>\n<li>如果ubuntu是aws 的 ec2 則需注意security group是否有開起mysql的port 3306</li>\n</ul>\n"},{"title":"java實作linkedlist","toc":true,"comments":1,"date":"2016-07-28T15:38:23.000Z","description":null,"_content":"### 前言\n* 去面試時被問到如何實作LinkedList，結果答不出來，回家google練習\n* 本篇只有Java程式碼\n### 實作\n\n```java\npublic class LinkedList<T> {\n\n\tpublic static void main(String[] args) {\n\t\tLinkedList<String> testList = new LinkedList<String>();\n\t\ttestList.add(\"eric\");\n\t\ttestList.add(\"is\");\n\t\ttestList.add(\"a\");\n\t\ttestList.add(\"pig\");\n\t\tSystem.out.println(testList.get(2));\n\t\tSystem.out.println(testList.size());\n\t\ttestList.remove(2);\n\t\tSystem.out.println(testList.get(2));\n\t\tSystem.out.println(testList.size());\n\t\ttestList.add(\"shih\", 1);\n\t\tSystem.out.println(testList.get(1));\n\t\tSystem.out.println(testList.size());\n\t}\n\n\tprivate Node<T> head;\n\n\tprivate int count;\n\n\tpublic T get(int index) {\n\t\tif (index >= count || index < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (head != null) {\n\t\t\tif (index == 0) {\n\t\t\t\treturn head.getValue();\n\t\t\t}\n\t\t\tNode<T> resultNode = head;\n\t\t\tfor (int i=0; i< index; i++) {\n\t\t\t\tresultNode = resultNode.getNextNode();\n\t\t\t}\n\t\t\treturn resultNode.getValue();\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic boolean add(T object) {\n\t\tif (head == null) {\n\t\t\thead = new Node<T>(object);\n\t\t} else {\n\t\t\tNode<T> currentNode = head;\n\t\t\twhile (currentNode.getNextNode() != null) {\n\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t}\n\t\t\tcurrentNode.setNextNode(new Node<T>(object));\n\t\t}\n\t\tcount++;\n\t\treturn true;\n\t}\n\n\tpublic boolean add(T object, int index) {\n\t\t//add first\n\t\tif (index == 0 && head == null) {\n\t\t\thead = new Node<T>(object);\n\t\t}else if (index == 0 && head != null) {\n\t\t\tNode<T> tmpNode = new Node<T>(object);\n\t\t\ttmpNode.setNextNode(head);\n\t\t\thead = tmpNode;\n\t\t}\n\n\t\tif (head != null) {\n\t\t\tNode<T> currentNode = head;\n\t\t\tNode<T> tmpNode = new Node<T>(object);\n\t\t\tindex--;\n\t\t\tfor (int i = 0; i< index; i++) {\n\t\t\t\tif (currentNode.getNextNode() != null) {\n\t\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmpNode.setNextNode(currentNode.getNextNode());\n\t\t\tcurrentNode.setNextNode(tmpNode);\n\t\t}\n\t\tcount++;\n\t\treturn true;\n\t}\n\n\tpublic boolean remove(int index) {\n\t\tif (index == 0 && head != null && head.getNextNode() == null) {\n\t\t\thead = null;\n\t\t\tcount--;\n\t\t\treturn true;\n\t\t}\n\t\tif (head != null) {\n\t\t\tNode<T> currentNode = head;\n\t\t\tindex--;\n\t\t\tfor (int i = 0; i< index; i++) {\n\t\t\t\tif (currentNode.getNextNode() != null) {\n\t\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentNode.setNextNode(currentNode.getNextNode().getNextNode());\n\t\t}\n\t\tcount--;\n\t\treturn true;\n\t}\n\n\tpublic int size() {\n\t\treturn this.count;\n\t}\n\n\t/**\n\t * LinkedList 使用節點模型\n\t * inner class\n\t */\n\tprivate class Node<T> {\n\n\t\t/** 目前節點的值*/\n\t\tprivate T value;\n\t\t/** 下個節點*/\n\t\tprivate Node<T> nextNode;\n\n\t\tpublic Node(T object) {\n\t\t\tthis.value = object;\n\t\t}\n\n\t\tpublic T getValue() {\n\t\t\treturn value;\n\t\t}\n\t\tpublic void setValue(T value) {\n\t\t\tthis.value = value;\n\t\t}\n\t\tpublic Node<T> getNextNode() {\n\t\t\treturn nextNode;\n\t\t}\n\t\tpublic void setNextNode(Node<T> nextNode) {\n\t\t\tthis.nextNode = nextNode;\n\t\t}\n\t}\n}\n```\n\n### LinkedList 概念\n* 參考 (https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html)\n* 參考 (https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/)\n","source":"_posts/implement-linkedlist-in-java.md","raw":"---\ntitle: java實作linkedlist\ntoc: true\ncomments: true\ndate: 2016-07-28 23:38:23\ndescription:\ntags:\n    - LinkedList\ncategories:\n    - java\n---\n### 前言\n* 去面試時被問到如何實作LinkedList，結果答不出來，回家google練習\n* 本篇只有Java程式碼\n### 實作\n\n```java\npublic class LinkedList<T> {\n\n\tpublic static void main(String[] args) {\n\t\tLinkedList<String> testList = new LinkedList<String>();\n\t\ttestList.add(\"eric\");\n\t\ttestList.add(\"is\");\n\t\ttestList.add(\"a\");\n\t\ttestList.add(\"pig\");\n\t\tSystem.out.println(testList.get(2));\n\t\tSystem.out.println(testList.size());\n\t\ttestList.remove(2);\n\t\tSystem.out.println(testList.get(2));\n\t\tSystem.out.println(testList.size());\n\t\ttestList.add(\"shih\", 1);\n\t\tSystem.out.println(testList.get(1));\n\t\tSystem.out.println(testList.size());\n\t}\n\n\tprivate Node<T> head;\n\n\tprivate int count;\n\n\tpublic T get(int index) {\n\t\tif (index >= count || index < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (head != null) {\n\t\t\tif (index == 0) {\n\t\t\t\treturn head.getValue();\n\t\t\t}\n\t\t\tNode<T> resultNode = head;\n\t\t\tfor (int i=0; i< index; i++) {\n\t\t\t\tresultNode = resultNode.getNextNode();\n\t\t\t}\n\t\t\treturn resultNode.getValue();\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic boolean add(T object) {\n\t\tif (head == null) {\n\t\t\thead = new Node<T>(object);\n\t\t} else {\n\t\t\tNode<T> currentNode = head;\n\t\t\twhile (currentNode.getNextNode() != null) {\n\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t}\n\t\t\tcurrentNode.setNextNode(new Node<T>(object));\n\t\t}\n\t\tcount++;\n\t\treturn true;\n\t}\n\n\tpublic boolean add(T object, int index) {\n\t\t//add first\n\t\tif (index == 0 && head == null) {\n\t\t\thead = new Node<T>(object);\n\t\t}else if (index == 0 && head != null) {\n\t\t\tNode<T> tmpNode = new Node<T>(object);\n\t\t\ttmpNode.setNextNode(head);\n\t\t\thead = tmpNode;\n\t\t}\n\n\t\tif (head != null) {\n\t\t\tNode<T> currentNode = head;\n\t\t\tNode<T> tmpNode = new Node<T>(object);\n\t\t\tindex--;\n\t\t\tfor (int i = 0; i< index; i++) {\n\t\t\t\tif (currentNode.getNextNode() != null) {\n\t\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmpNode.setNextNode(currentNode.getNextNode());\n\t\t\tcurrentNode.setNextNode(tmpNode);\n\t\t}\n\t\tcount++;\n\t\treturn true;\n\t}\n\n\tpublic boolean remove(int index) {\n\t\tif (index == 0 && head != null && head.getNextNode() == null) {\n\t\t\thead = null;\n\t\t\tcount--;\n\t\t\treturn true;\n\t\t}\n\t\tif (head != null) {\n\t\t\tNode<T> currentNode = head;\n\t\t\tindex--;\n\t\t\tfor (int i = 0; i< index; i++) {\n\t\t\t\tif (currentNode.getNextNode() != null) {\n\t\t\t\t\tcurrentNode = currentNode.getNextNode();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentNode.setNextNode(currentNode.getNextNode().getNextNode());\n\t\t}\n\t\tcount--;\n\t\treturn true;\n\t}\n\n\tpublic int size() {\n\t\treturn this.count;\n\t}\n\n\t/**\n\t * LinkedList 使用節點模型\n\t * inner class\n\t */\n\tprivate class Node<T> {\n\n\t\t/** 目前節點的值*/\n\t\tprivate T value;\n\t\t/** 下個節點*/\n\t\tprivate Node<T> nextNode;\n\n\t\tpublic Node(T object) {\n\t\t\tthis.value = object;\n\t\t}\n\n\t\tpublic T getValue() {\n\t\t\treturn value;\n\t\t}\n\t\tpublic void setValue(T value) {\n\t\t\tthis.value = value;\n\t\t}\n\t\tpublic Node<T> getNextNode() {\n\t\t\treturn nextNode;\n\t\t}\n\t\tpublic void setNextNode(Node<T> nextNode) {\n\t\t\tthis.nextNode = nextNode;\n\t\t}\n\t}\n}\n```\n\n### LinkedList 概念\n* 參考 (https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html)\n* 參考 (https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/)\n","slug":"implement-linkedlist-in-java","published":1,"updated":"2016-08-03T07:15:52.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1z2000cs9lpvxtebthh","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ul>\n<li>去面試時被問到如何實作LinkedList，結果答不出來，回家google練習</li>\n<li>本篇只有Java程式碼<h3 id=\"實作\"><a href=\"#實作\" class=\"headerlink\" title=\"實作\"></a>實作</h3></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkedList</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tLinkedList&lt;String&gt; testList = <span class=\"keyword\">new</span> LinkedList&lt;String&gt;();</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"eric\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"is\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"pig\"</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t\ttestList.remove(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"shih\"</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">1</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Node&lt;T&gt; head;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> count;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index &gt;= count || index &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> head.getValue();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; resultNode = head;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\tresultNode = resultNode.getNextNode();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> resultNode.getValue();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">add</span><span class=\"params\">(T object)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(<span class=\"keyword\">new</span> Node&lt;T&gt;(object));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">add</span><span class=\"params\">(T object, <span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//add first</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; tmpNode = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t\ttmpNode.setNextNode(head);</span><br><span class=\"line\">\t\t\thead = tmpNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; tmpNode = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t\tindex--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ttmpNode.setNextNode(currentNode.getNextNode());</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(tmpNode);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head != <span class=\"keyword\">null</span> &amp;&amp; head.getNextNode() == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\tcount--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\tindex--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(currentNode.getNextNode().getNextNode());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.count;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * LinkedList 使用節點模型</span><br><span class=\"line\">\t * inner class</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/** 目前節點的值*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> T value;</span><br><span class=\"line\">\t\t<span class=\"comment\">/** 下個節點*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> Node&lt;T&gt; nextNode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(T object)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.value = object;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">getValue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> value;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setValue</span><span class=\"params\">(T value)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Node&lt;T&gt; <span class=\"title\">getNextNode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> nextNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNextNode</span><span class=\"params\">(Node&lt;T&gt; nextNode)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.nextNode = nextNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"LinkedList-概念\"><a href=\"#LinkedList-概念\" class=\"headerlink\" title=\"LinkedList 概念\"></a>LinkedList 概念</h3><ul>\n<li>參考 (<a href=\"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html\" target=\"_blank\" rel=\"external\">https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html</a>)</li>\n<li>參考 (<a href=\"https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/\" target=\"_blank\" rel=\"external\">https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/</a>)</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ul>\n<li>去面試時被問到如何實作LinkedList，結果答不出來，回家google練習</li>\n<li>本篇只有Java程式碼<h3 id=\"實作\"><a href=\"#實作\" class=\"headerlink\" title=\"實作\"></a>實作</h3></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkedList</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tLinkedList&lt;String&gt; testList = <span class=\"keyword\">new</span> LinkedList&lt;String&gt;();</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"eric\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"is\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"pig\"</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t\ttestList.remove(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t\ttestList.add(<span class=\"string\">\"shih\"</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tSystem.out.println(testList.get(<span class=\"number\">1</span>));</span><br><span class=\"line\">\t\tSystem.out.println(testList.size());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Node&lt;T&gt; head;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> count;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index &gt;= count || index &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> head.getValue();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; resultNode = head;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\tresultNode = resultNode.getNextNode();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> resultNode.getValue();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">add</span><span class=\"params\">(T object)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(<span class=\"keyword\">new</span> Node&lt;T&gt;(object));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">add</span><span class=\"params\">(T object, <span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//add first</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; tmpNode = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t\ttmpNode.setNextNode(head);</span><br><span class=\"line\">\t\t\thead = tmpNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; tmpNode = <span class=\"keyword\">new</span> Node&lt;T&gt;(object);</span><br><span class=\"line\">\t\t\tindex--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ttmpNode.setNextNode(currentNode.getNextNode());</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(tmpNode);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">remove</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">0</span> &amp;&amp; head != <span class=\"keyword\">null</span> &amp;&amp; head.getNextNode() == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\thead = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\tcount--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (head != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tNode&lt;T&gt; currentNode = head;</span><br><span class=\"line\">\t\t\tindex--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt; index; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (currentNode.getNextNode() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcurrentNode = currentNode.getNextNode();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurrentNode.setNextNode(currentNode.getNextNode().getNextNode());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcount--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.count;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * LinkedList 使用節點模型</span><br><span class=\"line\">\t * inner class</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/** 目前節點的值*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> T value;</span><br><span class=\"line\">\t\t<span class=\"comment\">/** 下個節點*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> Node&lt;T&gt; nextNode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(T object)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.value = object;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">getValue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> value;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setValue</span><span class=\"params\">(T value)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Node&lt;T&gt; <span class=\"title\">getNextNode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> nextNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNextNode</span><span class=\"params\">(Node&lt;T&gt; nextNode)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.nextNode = nextNode;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"LinkedList-概念\"><a href=\"#LinkedList-概念\" class=\"headerlink\" title=\"LinkedList 概念\"></a>LinkedList 概念</h3><ul>\n<li>參考 (<a href=\"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html\">https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html</a>)</li>\n<li>參考 (<a href=\"https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/\">https://crunchify.com/how-to-implement-a-linkedlist-class-from-scratch-in-java/</a>)</li>\n</ul>\n"},{"title":"Line機器人API","toc":true,"comments":1,"date":"2016-07-28T15:36:08.000Z","description":null,"_content":"### 註冊申請Line 機器人\n* [Line developer 官網](https://developers.line.me/bot-api/overview) 申請機器人帳號\n* 申請註冊channel後，設定`Callback URL`，必需要是`https`而且不能是自行簽署的憑證，還要符合line認可的[CA list](https://developers.line.me/wp-content/uploads/2016/04/ca_root.txt)\n* 還需在`Server IP Whitelist` 加上你提供callback url的主機ip\n* 取得API需使用的三組代碼`Channel ID` `Channel Secret` `MID`\n\n### 開始撰寫機器人程式\n* 推薦使用[java sdk](https://github.com/line/line-bot-sdk-java)\n\n### 個人github sample\n* (https://github.com/force416/linebot)\n","source":"_posts/line-bot-api.md","raw":"---\ntitle: Line機器人API\ntoc: true\ncomments: true\ndate: 2016-07-28 23:36:08\ndescription:\ntags:\n    - Line\ncategories:\n    - Java\n---\n### 註冊申請Line 機器人\n* [Line developer 官網](https://developers.line.me/bot-api/overview) 申請機器人帳號\n* 申請註冊channel後，設定`Callback URL`，必需要是`https`而且不能是自行簽署的憑證，還要符合line認可的[CA list](https://developers.line.me/wp-content/uploads/2016/04/ca_root.txt)\n* 還需在`Server IP Whitelist` 加上你提供callback url的主機ip\n* 取得API需使用的三組代碼`Channel ID` `Channel Secret` `MID`\n\n### 開始撰寫機器人程式\n* 推薦使用[java sdk](https://github.com/line/line-bot-sdk-java)\n\n### 個人github sample\n* (https://github.com/force416/linebot)\n","slug":"line-bot-api","published":1,"updated":"2016-07-29T02:53:39.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1z7000gs9lp7ccuiqrq","content":"<h3 id=\"註冊申請Line-機器人\"><a href=\"#註冊申請Line-機器人\" class=\"headerlink\" title=\"註冊申請Line 機器人\"></a>註冊申請Line 機器人</h3><ul>\n<li><a href=\"https://developers.line.me/bot-api/overview\" target=\"_blank\" rel=\"external\">Line developer 官網</a> 申請機器人帳號</li>\n<li>申請註冊channel後，設定<code>Callback URL</code>，必需要是<code>https</code>而且不能是自行簽署的憑證，還要符合line認可的<a href=\"https://developers.line.me/wp-content/uploads/2016/04/ca_root.txt\" target=\"_blank\" rel=\"external\">CA list</a></li>\n<li>還需在<code>Server IP Whitelist</code> 加上你提供callback url的主機ip</li>\n<li>取得API需使用的三組代碼<code>Channel ID</code> <code>Channel Secret</code> <code>MID</code></li>\n</ul>\n<h3 id=\"開始撰寫機器人程式\"><a href=\"#開始撰寫機器人程式\" class=\"headerlink\" title=\"開始撰寫機器人程式\"></a>開始撰寫機器人程式</h3><ul>\n<li>推薦使用<a href=\"https://github.com/line/line-bot-sdk-java\" target=\"_blank\" rel=\"external\">java sdk</a></li>\n</ul>\n<h3 id=\"個人github-sample\"><a href=\"#個人github-sample\" class=\"headerlink\" title=\"個人github sample\"></a>個人github sample</h3><ul>\n<li>(<a href=\"https://github.com/force416/linebot\" target=\"_blank\" rel=\"external\">https://github.com/force416/linebot</a>)</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"註冊申請Line-機器人\"><a href=\"#註冊申請Line-機器人\" class=\"headerlink\" title=\"註冊申請Line 機器人\"></a>註冊申請Line 機器人</h3><ul>\n<li><a href=\"https://developers.line.me/bot-api/overview\">Line developer 官網</a> 申請機器人帳號</li>\n<li>申請註冊channel後，設定<code>Callback URL</code>，必需要是<code>https</code>而且不能是自行簽署的憑證，還要符合line認可的<a href=\"https://developers.line.me/wp-content/uploads/2016/04/ca_root.txt\">CA list</a></li>\n<li>還需在<code>Server IP Whitelist</code> 加上你提供callback url的主機ip</li>\n<li>取得API需使用的三組代碼<code>Channel ID</code> <code>Channel Secret</code> <code>MID</code></li>\n</ul>\n<h3 id=\"開始撰寫機器人程式\"><a href=\"#開始撰寫機器人程式\" class=\"headerlink\" title=\"開始撰寫機器人程式\"></a>開始撰寫機器人程式</h3><ul>\n<li>推薦使用<a href=\"https://github.com/line/line-bot-sdk-java\">java sdk</a></li>\n</ul>\n<h3 id=\"個人github-sample\"><a href=\"#個人github-sample\" class=\"headerlink\" title=\"個人github sample\"></a>個人github sample</h3><ul>\n<li>(<a href=\"https://github.com/force416/linebot\">https://github.com/force416/linebot</a>)</li>\n</ul>\n"},{"title":"ubuntu SSL設定","toc":true,"comments":1,"date":"2016-04-28T11:59:50.000Z","description":null,"_content":"\n### 安裝 NGINX 伺服器\n* 直接 ubuntu Server 直接可以透過apt-get套件管理安裝\n```bash\n$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo install nginx\n```\n\n### 建立一個放憑證的folder\n* 因為要透過nginx，所以直接在nginx的目錄下建一個folder\n```bash\n$ sudo mkdir /etc/nginx/ssl\n```\n\n### 產生自行簽署的 SSL 憑證\n* 透過`openssl`產生自行簽署的憑證\n```bash\n$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\n```\n* 參數說明及設定參考這篇[NGINX 設定 HTTPS 網頁加密連線，建立自行簽署的 SSL 憑證](http://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/)\n\n### 設定 nginx 伺服器\n* 編輯 nginx 的設定檔\n```bash\n$ sudo vi /etc/nginx/sites-available/default\n```\n* 加入以下設定\n```txt\nupstream app_server {\n    server 127.0.0.1:8080 fail_timeout=0;\n}\n\nserver {\n        listen 443;\n        server_name localhost;\n\n        #root html;\n        #index index.html index.htm;\n\n        ssl on;\n        #設定憑證金鑰的路徑\n        ssl_certificate /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n        location / {\n                proxy_pass http://app_server;\n        }\n}\n```\n\n### 重新啟動 nginx\n```bash\n$ sudo service nginx restart\n```\n\n### 透過 browser 連線\n* 直接輸入 https://yourdomain 即可透過SSL連線，但因為是自行簽署的私人憑證並未透過第三方認證，正常來說會出現憑證授權不可靠的警告\n","source":"_posts/ubuntu-nginx-ssl-setting.md","raw":"---\ntitle: ubuntu SSL設定\ntoc: true\ncomments: true\ndate: 2016-04-28 19:59:50\ndescription:\ntags:\n  - ubuntu\n  - nginx\n  - SSL\n  - https\ncategories: ubuntu\n---\n\n### 安裝 NGINX 伺服器\n* 直接 ubuntu Server 直接可以透過apt-get套件管理安裝\n```bash\n$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo install nginx\n```\n\n### 建立一個放憑證的folder\n* 因為要透過nginx，所以直接在nginx的目錄下建一個folder\n```bash\n$ sudo mkdir /etc/nginx/ssl\n```\n\n### 產生自行簽署的 SSL 憑證\n* 透過`openssl`產生自行簽署的憑證\n```bash\n$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\n```\n* 參數說明及設定參考這篇[NGINX 設定 HTTPS 網頁加密連線，建立自行簽署的 SSL 憑證](http://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/)\n\n### 設定 nginx 伺服器\n* 編輯 nginx 的設定檔\n```bash\n$ sudo vi /etc/nginx/sites-available/default\n```\n* 加入以下設定\n```txt\nupstream app_server {\n    server 127.0.0.1:8080 fail_timeout=0;\n}\n\nserver {\n        listen 443;\n        server_name localhost;\n\n        #root html;\n        #index index.html index.htm;\n\n        ssl on;\n        #設定憑證金鑰的路徑\n        ssl_certificate /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n        location / {\n                proxy_pass http://app_server;\n        }\n}\n```\n\n### 重新啟動 nginx\n```bash\n$ sudo service nginx restart\n```\n\n### 透過 browser 連線\n* 直接輸入 https://yourdomain 即可透過SSL連線，但因為是自行簽署的私人憑證並未透過第三方認證，正常來說會出現憑證授權不可靠的警告\n","slug":"ubuntu-nginx-ssl-setting","published":1,"updated":"2016-05-01T09:26:32.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1z9000is9lpq7t4g4j8","content":"<h3 id=\"安裝-NGINX-伺服器\"><a href=\"#安裝-NGINX-伺服器\" class=\"headerlink\" title=\"安裝 NGINX 伺服器\"></a>安裝 NGINX 伺服器</h3><ul>\n<li>直接 ubuntu Server 直接可以透過apt-get套件管理安裝<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get upgrade</span><br><span class=\"line\">$ sudo install nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立一個放憑證的folder\"><a href=\"#建立一個放憑證的folder\" class=\"headerlink\" title=\"建立一個放憑證的folder\"></a>建立一個放憑證的folder</h3><ul>\n<li>因為要透過nginx，所以直接在nginx的目錄下建一個folder<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkdir /etc/nginx/ssl</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"產生自行簽署的-SSL-憑證\"><a href=\"#產生自行簽署的-SSL-憑證\" class=\"headerlink\" title=\"產生自行簽署的 SSL 憑證\"></a>產生自行簽署的 SSL 憑證</h3><ul>\n<li><p>透過<code>openssl</code>產生自行簽署的憑證</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>參數說明及設定參考這篇<a href=\"http://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/\" target=\"_blank\" rel=\"external\">NGINX 設定 HTTPS 網頁加密連線，建立自行簽署的 SSL 憑證</a></p>\n</li>\n</ul>\n<h3 id=\"設定-nginx-伺服器\"><a href=\"#設定-nginx-伺服器\" class=\"headerlink\" title=\"設定 nginx 伺服器\"></a>設定 nginx 伺服器</h3><ul>\n<li><p>編輯 nginx 的設定檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入以下設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream app_server &#123;</span><br><span class=\"line\">    server 127.0.0.1:8080 fail_timeout=0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        #root html;</span><br><span class=\"line\">        #index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl on;</span><br><span class=\"line\">        #設定憑證金鑰的路徑</span><br><span class=\"line\">        ssl_certificate /etc/nginx/ssl/nginx.crt;</span><br><span class=\"line\">        ssl_certificate_key /etc/nginx/ssl/nginx.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://app_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"重新啟動-nginx\"><a href=\"#重新啟動-nginx\" class=\"headerlink\" title=\"重新啟動 nginx\"></a>重新啟動 nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"透過-browser-連線\"><a href=\"#透過-browser-連線\" class=\"headerlink\" title=\"透過 browser 連線\"></a>透過 browser 連線</h3><ul>\n<li>直接輸入 <a href=\"https://yourdomain\" target=\"_blank\" rel=\"external\">https://yourdomain</a> 即可透過SSL連線，但因為是自行簽署的私人憑證並未透過第三方認證，正常來說會出現憑證授權不可靠的警告</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"安裝-NGINX-伺服器\"><a href=\"#安裝-NGINX-伺服器\" class=\"headerlink\" title=\"安裝 NGINX 伺服器\"></a>安裝 NGINX 伺服器</h3><ul>\n<li>直接 ubuntu Server 直接可以透過apt-get套件管理安裝<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get upgrade</span><br><span class=\"line\">$ sudo install nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立一個放憑證的folder\"><a href=\"#建立一個放憑證的folder\" class=\"headerlink\" title=\"建立一個放憑證的folder\"></a>建立一個放憑證的folder</h3><ul>\n<li>因為要透過nginx，所以直接在nginx的目錄下建一個folder<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkdir /etc/nginx/ssl</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"產生自行簽署的-SSL-憑證\"><a href=\"#產生自行簽署的-SSL-憑證\" class=\"headerlink\" title=\"產生自行簽署的 SSL 憑證\"></a>產生自行簽署的 SSL 憑證</h3><ul>\n<li><p>透過<code>openssl</code>產生自行簽署的憑證</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>參數說明及設定參考這篇<a href=\"http://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/\">NGINX 設定 HTTPS 網頁加密連線，建立自行簽署的 SSL 憑證</a></p>\n</li>\n</ul>\n<h3 id=\"設定-nginx-伺服器\"><a href=\"#設定-nginx-伺服器\" class=\"headerlink\" title=\"設定 nginx 伺服器\"></a>設定 nginx 伺服器</h3><ul>\n<li><p>編輯 nginx 的設定檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入以下設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream app_server &#123;</span><br><span class=\"line\">    server 127.0.0.1:8080 fail_timeout=0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        #root html;</span><br><span class=\"line\">        #index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl on;</span><br><span class=\"line\">        #設定憑證金鑰的路徑</span><br><span class=\"line\">        ssl_certificate /etc/nginx/ssl/nginx.crt;</span><br><span class=\"line\">        ssl_certificate_key /etc/nginx/ssl/nginx.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://app_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"重新啟動-nginx\"><a href=\"#重新啟動-nginx\" class=\"headerlink\" title=\"重新啟動 nginx\"></a>重新啟動 nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"透過-browser-連線\"><a href=\"#透過-browser-連線\" class=\"headerlink\" title=\"透過 browser 連線\"></a>透過 browser 連線</h3><ul>\n<li>直接輸入 <a href=\"https://yourdomain\">https://yourdomain</a> 即可透過SSL連線，但因為是自行簽署的私人憑證並未透過第三方認證，正常來說會出現憑證授權不可靠的警告</li>\n</ul>\n"},{"title":"npm 基本指令","toc":true,"comments":1,"date":"2016-05-01T07:19:35.000Z","description":null,"_content":"### npm 簡介\n* npm 全名為 Node Package Manager，是 Node.js 的套件（package）管理工具\n\n* 產生package.json 檔案\n```bash\n$ npm init\n```\n* 如果專案裡已有package.json可以直接執行 install\n```bash\n$ npm install\n```\n* 全域安裝加上`-g`的參數\n```bash\n$ npm install <package name> -g\n```\n\n* 專案安裝不加`-g`的參數\n```bash\n$ npm install <package name>\n```\n\n* 專案安裝並加入`package.json`檔案裡，需加上`--save`的參數\n```bash\n$ npm install <package name> --save\n```\n\n* 定義在`package.json`檔案裡`scripts`參數下的指令可透過`npm start`執行\n```xml\n#package.json\n\n...\n\"scripts\": {\n    \"start\": \"node ./bin/www\"\n}\n...\n\n```\n```bash\n#實際上是執行 $ node ./bin/www\n$ npm start\n```\n","source":"_posts/npm-basic-command-line.md","raw":"---\ntitle: npm 基本指令\ntoc: true\ncomments: true\ndate: 2016-05-01 15:19:35\ndescription:\ntags:\n  - npm\ncategories:\n  - node.js\n---\n### npm 簡介\n* npm 全名為 Node Package Manager，是 Node.js 的套件（package）管理工具\n\n* 產生package.json 檔案\n```bash\n$ npm init\n```\n* 如果專案裡已有package.json可以直接執行 install\n```bash\n$ npm install\n```\n* 全域安裝加上`-g`的參數\n```bash\n$ npm install <package name> -g\n```\n\n* 專案安裝不加`-g`的參數\n```bash\n$ npm install <package name>\n```\n\n* 專案安裝並加入`package.json`檔案裡，需加上`--save`的參數\n```bash\n$ npm install <package name> --save\n```\n\n* 定義在`package.json`檔案裡`scripts`參數下的指令可透過`npm start`執行\n```xml\n#package.json\n\n...\n\"scripts\": {\n    \"start\": \"node ./bin/www\"\n}\n...\n\n```\n```bash\n#實際上是執行 $ node ./bin/www\n$ npm start\n```\n","slug":"npm-basic-command-line","published":1,"updated":"2016-05-05T01:35:27.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1zb000ms9lpqyt0zj4o","content":"<h3 id=\"npm-簡介\"><a href=\"#npm-簡介\" class=\"headerlink\" title=\"npm 簡介\"></a>npm 簡介</h3><ul>\n<li><p>npm 全名為 Node Package Manager，是 Node.js 的套件（package）管理工具</p>\n</li>\n<li><p>產生package.json 檔案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果專案裡已有package.json可以直接執行 install</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全域安裝加上<code>-g</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt; -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>專案安裝不加<code>-g</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>專案安裝並加入<code>package.json</code>檔案裡，需加上<code>--save</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt; --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定義在<code>package.json</code>檔案裡<code>scripts</code>參數下的指令可透過<code>npm start</code>執行</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#package.json</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"node ./bin/www\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#實際上是執行 $ node ./bin/www</span></span><br><span class=\"line\">$ npm start</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"npm-簡介\"><a href=\"#npm-簡介\" class=\"headerlink\" title=\"npm 簡介\"></a>npm 簡介</h3><ul>\n<li><p>npm 全名為 Node Package Manager，是 Node.js 的套件（package）管理工具</p>\n</li>\n<li><p>產生package.json 檔案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果專案裡已有package.json可以直接執行 install</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全域安裝加上<code>-g</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt; -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>專案安裝不加<code>-g</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>專案安裝並加入<code>package.json</code>檔案裡，需加上<code>--save</code>的參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install &lt;package name&gt; --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定義在<code>package.json</code>檔案裡<code>scripts</code>參數下的指令可透過<code>npm start</code>執行</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#package.json</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">    \"start\": \"node ./bin/www\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#實際上是執行 $ node ./bin/www</span></span><br><span class=\"line\">$ npm start</span><br></pre></td></tr></table></figure>\n"},{"title":"spring boot 建立 web service","toc":true,"comments":1,"date":"2016-05-28T12:47:08.000Z","description":"透過spring boot 快速打造restful web service","_content":"### spring boot 介紹\n* [spring boot 官網](http://projects.spring.io/spring-boot/) Spring Boot主要目的就是為了節省配置專案的時間，可以利用他快速建立一個基於RESTful的Web專案\n\n### 建立maven project\n* 首先先建立一個一般的maven專案\n\n### pom.xml配置\n* 打開 `pom.xml` 加入spring boot 必要引入的lib\n``` xml\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.5.RELEASE</version>\n</parent>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n```\n### 建立spring init class\n* 在classpath下建立spring boot 起始，新增檔案`SpringBootSconfiguration.java`內容如下\n``` java\n@SpringBootApplication\npublic class SpringBootSconfiguration {\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootSconfiguration.class, args);\n    }\n}\n```\n\n### 建立restful web service\n* 建立`App.java`，內容如下\n```java\n@RestController()\n@RequestMapping(\"/z\")\npublic class App\n{\n    @RequestMapping(\"/hello/{num}\")\n    public @ResponseBody Map sayHello(@RequestParam(value=\"name\", required=false, defaultValue=\"Stranger\") String name,@PathVariable int num) {\n    \tMap<String, Object> resultMap = new HashMap<String, Object>();\n    \tresultMap.put(\"name\", name);\n    \tresultMap.put(\"num\", num);\n    \tresultMap.put(\"big_penis\", \"eric\");\n    \treturn resultMap;\n    }\n}\n```\n* `@RestController` 作用為宣告這class 為 restful風格的controller\n* `@RequestMapping(\"/z\")` 為對應的path\n\n### deploy to server\n* 由於spring boot已內建tomcat server 故只要以一般執行java class 的方式執行`App.java`即可\n* 透過browser連結 `localhost:8080/z/hello/3` 如有回傳json格式資料，即代表成功。\n\n### application.properties\n* 如果想要改變預設的 port `8080`，只需要在`src/main/resources`路徑下加入檔案`application.properties` 內容如下\n``` properties\nserver.port = 8090\n```\n* 加入此設定再重啟spring boot 就可透過browser連結 `localhost:8090/z/hello/3`\n\n### project tree\n* [gihub spring boot demo](https://github.com/force416/springboot_demo)\n* 專案結構\n``` txt\n├── pom.xml\n├── README.md\n├── src\n│   └── main\n│       ├── java\n│       │   └── eric\n│       │       └── ws\n│       │           ├── App.java\n│       │           └── SpringBootSconfiguration.java\n│       └── resources\n│           └── application.properties\n└── target\n```\n","source":"_posts/spring-boot-web-services.md","raw":"---\ntitle: spring boot 建立 web service\ntoc: true\ncomments: true\ndate: 2016-05-28 20:47:08\ndescription: 透過spring boot 快速打造restful web service\ntags:\n    - web service\ncategories:\n    - spring boot\n---\n### spring boot 介紹\n* [spring boot 官網](http://projects.spring.io/spring-boot/) Spring Boot主要目的就是為了節省配置專案的時間，可以利用他快速建立一個基於RESTful的Web專案\n\n### 建立maven project\n* 首先先建立一個一般的maven專案\n\n### pom.xml配置\n* 打開 `pom.xml` 加入spring boot 必要引入的lib\n``` xml\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.5.RELEASE</version>\n</parent>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n```\n### 建立spring init class\n* 在classpath下建立spring boot 起始，新增檔案`SpringBootSconfiguration.java`內容如下\n``` java\n@SpringBootApplication\npublic class SpringBootSconfiguration {\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootSconfiguration.class, args);\n    }\n}\n```\n\n### 建立restful web service\n* 建立`App.java`，內容如下\n```java\n@RestController()\n@RequestMapping(\"/z\")\npublic class App\n{\n    @RequestMapping(\"/hello/{num}\")\n    public @ResponseBody Map sayHello(@RequestParam(value=\"name\", required=false, defaultValue=\"Stranger\") String name,@PathVariable int num) {\n    \tMap<String, Object> resultMap = new HashMap<String, Object>();\n    \tresultMap.put(\"name\", name);\n    \tresultMap.put(\"num\", num);\n    \tresultMap.put(\"big_penis\", \"eric\");\n    \treturn resultMap;\n    }\n}\n```\n* `@RestController` 作用為宣告這class 為 restful風格的controller\n* `@RequestMapping(\"/z\")` 為對應的path\n\n### deploy to server\n* 由於spring boot已內建tomcat server 故只要以一般執行java class 的方式執行`App.java`即可\n* 透過browser連結 `localhost:8080/z/hello/3` 如有回傳json格式資料，即代表成功。\n\n### application.properties\n* 如果想要改變預設的 port `8080`，只需要在`src/main/resources`路徑下加入檔案`application.properties` 內容如下\n``` properties\nserver.port = 8090\n```\n* 加入此設定再重啟spring boot 就可透過browser連結 `localhost:8090/z/hello/3`\n\n### project tree\n* [gihub spring boot demo](https://github.com/force416/springboot_demo)\n* 專案結構\n``` txt\n├── pom.xml\n├── README.md\n├── src\n│   └── main\n│       ├── java\n│       │   └── eric\n│       │       └── ws\n│       │           ├── App.java\n│       │           └── SpringBootSconfiguration.java\n│       └── resources\n│           └── application.properties\n└── target\n```\n","slug":"spring-boot-web-services","published":1,"updated":"2016-06-18T13:55:50.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1zc000os9lpwlpzuiwe","content":"<h3 id=\"spring-boot-介紹\"><a href=\"#spring-boot-介紹\" class=\"headerlink\" title=\"spring boot 介紹\"></a>spring boot 介紹</h3><ul>\n<li><a href=\"http://projects.spring.io/spring-boot/\" target=\"_blank\" rel=\"external\">spring boot 官網</a> Spring Boot主要目的就是為了節省配置專案的時間，可以利用他快速建立一個基於RESTful的Web專案</li>\n</ul>\n<h3 id=\"建立maven-project\"><a href=\"#建立maven-project\" class=\"headerlink\" title=\"建立maven project\"></a>建立maven project</h3><ul>\n<li>首先先建立一個一般的maven專案</li>\n</ul>\n<h3 id=\"pom-xml配置\"><a href=\"#pom-xml配置\" class=\"headerlink\" title=\"pom.xml配置\"></a>pom.xml配置</h3><ul>\n<li>打開 <code>pom.xml</code> 加入spring boot 必要引入的lib<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立spring-init-class\"><a href=\"#建立spring-init-class\" class=\"headerlink\" title=\"建立spring init class\"></a>建立spring init class</h3><ul>\n<li>在classpath下建立spring boot 起始，新增檔案<code>SpringBootSconfiguration.java</code>內容如下<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootSconfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootSconfiguration.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立restful-web-service\"><a href=\"#建立restful-web-service\" class=\"headerlink\" title=\"建立restful web service\"></a>建立restful web service</h3><ul>\n<li><p>建立<code>App.java</code>，內容如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span>()</span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/z\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello/&#123;num&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">Map <span class=\"title\">sayHello</span><span class=\"params\">(@RequestParam(value=<span class=\"string\">\"name\"</span>, required=<span class=\"keyword\">false</span>, defaultValue=<span class=\"string\">\"Stranger\"</span>)</span> String name,@PathVariable <span class=\"keyword\">int</span> num) </span>&#123;</span><br><span class=\"line\">    \tMap&lt;String, Object&gt; resultMap = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"name\"</span>, name);</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"num\"</span>, num);</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"big_penis\"</span>, <span class=\"string\">\"eric\"</span>);</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> resultMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>@RestController</code> 作用為宣告這class 為 restful風格的controller</p>\n</li>\n<li><code>@RequestMapping(&quot;/z&quot;)</code> 為對應的path</li>\n</ul>\n<h3 id=\"deploy-to-server\"><a href=\"#deploy-to-server\" class=\"headerlink\" title=\"deploy to server\"></a>deploy to server</h3><ul>\n<li>由於spring boot已內建tomcat server 故只要以一般執行java class 的方式執行<code>App.java</code>即可</li>\n<li>透過browser連結 <code>localhost:8080/z/hello/3</code> 如有回傳json格式資料，即代表成功。</li>\n</ul>\n<h3 id=\"application-properties\"><a href=\"#application-properties\" class=\"headerlink\" title=\"application.properties\"></a>application.properties</h3><ul>\n<li><p>如果想要改變預設的 port <code>8080</code>，只需要在<code>src/main/resources</code>路徑下加入檔案<code>application.properties</code> 內容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port = 8090</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入此設定再重啟spring boot 就可透過browser連結 <code>localhost:8090/z/hello/3</code></p>\n</li>\n</ul>\n<h3 id=\"project-tree\"><a href=\"#project-tree\" class=\"headerlink\" title=\"project tree\"></a>project tree</h3><ul>\n<li><a href=\"https://github.com/force416/springboot_demo\" target=\"_blank\" rel=\"external\">gihub spring boot demo</a></li>\n<li>專案結構<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── pom.xml</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   └── main</span><br><span class=\"line\">│       ├── java</span><br><span class=\"line\">│       │   └── eric</span><br><span class=\"line\">│       │       └── ws</span><br><span class=\"line\">│       │           ├── App.java</span><br><span class=\"line\">│       │           └── SpringBootSconfiguration.java</span><br><span class=\"line\">│       └── resources</span><br><span class=\"line\">│           └── application.properties</span><br><span class=\"line\">└── target</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"spring-boot-介紹\"><a href=\"#spring-boot-介紹\" class=\"headerlink\" title=\"spring boot 介紹\"></a>spring boot 介紹</h3><ul>\n<li><a href=\"http://projects.spring.io/spring-boot/\">spring boot 官網</a> Spring Boot主要目的就是為了節省配置專案的時間，可以利用他快速建立一個基於RESTful的Web專案</li>\n</ul>\n<h3 id=\"建立maven-project\"><a href=\"#建立maven-project\" class=\"headerlink\" title=\"建立maven project\"></a>建立maven project</h3><ul>\n<li>首先先建立一個一般的maven專案</li>\n</ul>\n<h3 id=\"pom-xml配置\"><a href=\"#pom-xml配置\" class=\"headerlink\" title=\"pom.xml配置\"></a>pom.xml配置</h3><ul>\n<li>打開 <code>pom.xml</code> 加入spring boot 必要引入的lib<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立spring-init-class\"><a href=\"#建立spring-init-class\" class=\"headerlink\" title=\"建立spring init class\"></a>建立spring init class</h3><ul>\n<li>在classpath下建立spring boot 起始，新增檔案<code>SpringBootSconfiguration.java</code>內容如下<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootSconfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(SpringBootSconfiguration.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"建立restful-web-service\"><a href=\"#建立restful-web-service\" class=\"headerlink\" title=\"建立restful web service\"></a>建立restful web service</h3><ul>\n<li><p>建立<code>App.java</code>，內容如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span>()</span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/z\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello/&#123;num&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">Map <span class=\"title\">sayHello</span><span class=\"params\">(@RequestParam(value=<span class=\"string\">\"name\"</span>, required=<span class=\"keyword\">false</span>, defaultValue=<span class=\"string\">\"Stranger\"</span>)</span> String name,@PathVariable <span class=\"keyword\">int</span> num) </span>&#123;</span><br><span class=\"line\">    \tMap&lt;String, Object&gt; resultMap = <span class=\"keyword\">new</span> HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"name\"</span>, name);</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"num\"</span>, num);</span><br><span class=\"line\">    \tresultMap.put(<span class=\"string\">\"big_penis\"</span>, <span class=\"string\">\"eric\"</span>);</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> resultMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>@RestController</code> 作用為宣告這class 為 restful風格的controller</p>\n</li>\n<li><code>@RequestMapping(&quot;/z&quot;)</code> 為對應的path</li>\n</ul>\n<h3 id=\"deploy-to-server\"><a href=\"#deploy-to-server\" class=\"headerlink\" title=\"deploy to server\"></a>deploy to server</h3><ul>\n<li>由於spring boot已內建tomcat server 故只要以一般執行java class 的方式執行<code>App.java</code>即可</li>\n<li>透過browser連結 <code>localhost:8080/z/hello/3</code> 如有回傳json格式資料，即代表成功。</li>\n</ul>\n<h3 id=\"application-properties\"><a href=\"#application-properties\" class=\"headerlink\" title=\"application.properties\"></a>application.properties</h3><ul>\n<li><p>如果想要改變預設的 port <code>8080</code>，只需要在<code>src/main/resources</code>路徑下加入檔案<code>application.properties</code> 內容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port = 8090</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入此設定再重啟spring boot 就可透過browser連結 <code>localhost:8090/z/hello/3</code></p>\n</li>\n</ul>\n<h3 id=\"project-tree\"><a href=\"#project-tree\" class=\"headerlink\" title=\"project tree\"></a>project tree</h3><ul>\n<li><a href=\"https://github.com/force416/springboot_demo\">gihub spring boot demo</a></li>\n<li>專案結構<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── pom.xml</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   └── main</span><br><span class=\"line\">│       ├── java</span><br><span class=\"line\">│       │   └── eric</span><br><span class=\"line\">│       │       └── ws</span><br><span class=\"line\">│       │           ├── App.java</span><br><span class=\"line\">│       │           └── SpringBootSconfiguration.java</span><br><span class=\"line\">│       └── resources</span><br><span class=\"line\">│           └── application.properties</span><br><span class=\"line\">└── target</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"ubuntu上安裝Nginx","toc":true,"comments":1,"date":"2016-05-08T02:55:55.000Z","description":null,"_content":"### Nginx 介紹\n* Nginx 是個 Reverse Proxy Server(反向代理伺服器)，為什麼叫反向代理呢? 因為相對於一般 Proxy Server(正向代理伺服器)做的事剛好相反，用一張圖來解釋[(圖片出處)](https://www.zhihu.com/question/24723688)\n{% asset_img proxy_server.jpg %}\n\n### 在 ubuntu 上透過 apt-get 安裝 Nginx\n```bash\n$ sudo apt-get update\n$ sudo apt-get install nginx\n```\n\n### Nginx 設定\n* 基本的配置文件都在 `/etc/nginx` 路徑底下\n* 主要的置文件 `/etc/nginx/sites-available/default`\n\n### Nginx command line\n* start\n```bash\n$ sudo service nginx start\n```\n* stop\n```bash\n$ sudo service nginx stop\n```\n* restart\n```bash\n$ sudo service nginx restart\n```\n* 重新讀取配置文件\n```bash\n$ sudo service nginx -s reload\n```\n","source":"_posts/ubuntu-install-nginx.md","raw":"---\ntitle: ubuntu上安裝Nginx\ntoc: true\ncomments: true\ndate: 2016-05-08 10:55:55\ndescription:\ntags:\ncategories: ubuntu\n---\n### Nginx 介紹\n* Nginx 是個 Reverse Proxy Server(反向代理伺服器)，為什麼叫反向代理呢? 因為相對於一般 Proxy Server(正向代理伺服器)做的事剛好相反，用一張圖來解釋[(圖片出處)](https://www.zhihu.com/question/24723688)\n{% asset_img proxy_server.jpg %}\n\n### 在 ubuntu 上透過 apt-get 安裝 Nginx\n```bash\n$ sudo apt-get update\n$ sudo apt-get install nginx\n```\n\n### Nginx 設定\n* 基本的配置文件都在 `/etc/nginx` 路徑底下\n* 主要的置文件 `/etc/nginx/sites-available/default`\n\n### Nginx command line\n* start\n```bash\n$ sudo service nginx start\n```\n* stop\n```bash\n$ sudo service nginx stop\n```\n* restart\n```bash\n$ sudo service nginx restart\n```\n* 重新讀取配置文件\n```bash\n$ sudo service nginx -s reload\n```\n","slug":"ubuntu-install-nginx","published":1,"updated":"2016-05-08T04:12:31.000Z","layout":"post","photos":[],"link":"","_id":"ciso5o1zm000ss9lpxetot6ez","content":"<h3 id=\"Nginx-介紹\"><a href=\"#Nginx-介紹\" class=\"headerlink\" title=\"Nginx 介紹\"></a>Nginx 介紹</h3><ul>\n<li>Nginx 是個 Reverse Proxy Server(反向代理伺服器)，為什麼叫反向代理呢? 因為相對於一般 Proxy Server(正向代理伺服器)做的事剛好相反，用一張圖來解釋<a href=\"https://www.zhihu.com/question/24723688\" target=\"_blank\" rel=\"external\">(圖片出處)</a><img src=\"/eric_profile/2016/05/08/ubuntu-install-nginx/proxy_server.jpg\" alt=\"proxy_server.jpg\" title=\"\">\n</li>\n</ul>\n<h3 id=\"在-ubuntu-上透過-apt-get-安裝-Nginx\"><a href=\"#在-ubuntu-上透過-apt-get-安裝-Nginx\" class=\"headerlink\" title=\"在 ubuntu 上透過 apt-get 安裝 Nginx\"></a>在 ubuntu 上透過 apt-get 安裝 Nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nginx-設定\"><a href=\"#Nginx-設定\" class=\"headerlink\" title=\"Nginx 設定\"></a>Nginx 設定</h3><ul>\n<li>基本的配置文件都在 <code>/etc/nginx</code> 路徑底下</li>\n<li>主要的置文件 <code>/etc/nginx/sites-available/default</code></li>\n</ul>\n<h3 id=\"Nginx-command-line\"><a href=\"#Nginx-command-line\" class=\"headerlink\" title=\"Nginx command line\"></a>Nginx command line</h3><ul>\n<li><p>start</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx start</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>stop</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx stop</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>restart</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新讀取配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx <span class=\"_\">-s</span> reload</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"Nginx-介紹\"><a href=\"#Nginx-介紹\" class=\"headerlink\" title=\"Nginx 介紹\"></a>Nginx 介紹</h3><ul>\n<li>Nginx 是個 Reverse Proxy Server(反向代理伺服器)，為什麼叫反向代理呢? 因為相對於一般 Proxy Server(正向代理伺服器)做的事剛好相反，用一張圖來解釋<a href=\"https://www.zhihu.com/question/24723688\">(圖片出處)</a><img src=\"/eric_profile/2016/05/08/ubuntu-install-nginx/proxy_server.jpg\" alt=\"proxy_server.jpg\" title=\"\">\n</li>\n</ul>\n<h3 id=\"在-ubuntu-上透過-apt-get-安裝-Nginx\"><a href=\"#在-ubuntu-上透過-apt-get-安裝-Nginx\" class=\"headerlink\" title=\"在 ubuntu 上透過 apt-get 安裝 Nginx\"></a>在 ubuntu 上透過 apt-get 安裝 Nginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nginx-設定\"><a href=\"#Nginx-設定\" class=\"headerlink\" title=\"Nginx 設定\"></a>Nginx 設定</h3><ul>\n<li>基本的配置文件都在 <code>/etc/nginx</code> 路徑底下</li>\n<li>主要的置文件 <code>/etc/nginx/sites-available/default</code></li>\n</ul>\n<h3 id=\"Nginx-command-line\"><a href=\"#Nginx-command-line\" class=\"headerlink\" title=\"Nginx command line\"></a>Nginx command line</h3><ul>\n<li><p>start</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx start</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>stop</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx stop</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>restart</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新讀取配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo service nginx <span class=\"_\">-s</span> reload</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/docker-use/docker_img.jpg","slug":"docker_img.jpg","post":"ciso5o1yp0005s9lphyn91qsh","modified":0,"renderable":0},{"_id":"source/_posts/npm-basic-command-line/example.png","slug":"example.png","post":"ciso5o1zb000ms9lpqyt0zj4o","modified":0,"renderable":0},{"_id":"source/_posts/ubuntu-install-nginx/proxy_server.jpg","slug":"proxy_server.jpg","post":"ciso5o1zm000ss9lpxetot6ez","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ciso5o1ye0000s9lpgvy1pm88","category_id":"ciso5o1yp0004s9lp774m446j","_id":"ciso5o1z2000bs9lprqeyy3uh"},{"post_id":"ciso5o1yk0002s9lpbtsgr8k5","category_id":"ciso5o1yu0009s9lpdbx6ouhj","_id":"ciso5o1za000js9lpi61wb43u"},{"post_id":"ciso5o1z2000cs9lpvxtebthh","category_id":"ciso5o1yp0004s9lp774m446j","_id":"ciso5o1zc000ns9lp994elllm"},{"post_id":"ciso5o1yp0005s9lphyn91qsh","category_id":"ciso5o1z6000es9lpmehu11mq","_id":"ciso5o1zk000ps9lp624vrg2i"},{"post_id":"ciso5o1ys0006s9lpmp3a969y","category_id":"ciso5o1zb000ls9lp25xjz7gl","_id":"ciso5o1zn000vs9lp344r0fd4"},{"post_id":"ciso5o1yt0008s9lpobz5n0nq","category_id":"ciso5o1zl000rs9lplwunkjcy","_id":"ciso5o1zp000ys9lpta0kgiug"},{"post_id":"ciso5o1yv000as9lp5avglxiu","category_id":"ciso5o1zo000xs9lpwbiy6y22","_id":"ciso5o1zq0013s9lpod0t9u2y"},{"post_id":"ciso5o1z7000gs9lp7ccuiqrq","category_id":"ciso5o1zp0010s9lpbrkky2ay","_id":"ciso5o1zr0016s9lpk88a716u"},{"post_id":"ciso5o1z9000is9lpq7t4g4j8","category_id":"ciso5o1zl000rs9lplwunkjcy","_id":"ciso5o1zs001bs9lp724ohkk7"},{"post_id":"ciso5o1zb000ms9lpqyt0zj4o","category_id":"ciso5o1zr0018s9lprj1rl8pi","_id":"ciso5o1zt001es9lp8fqcqjqk"},{"post_id":"ciso5o1zc000os9lpwlpzuiwe","category_id":"ciso5o1zs001ds9lp93bwu9nd","_id":"ciso5o1zu001js9lpq7wlrfsy"},{"post_id":"ciso5o1zm000ss9lpxetot6ez","category_id":"ciso5o1zl000rs9lplwunkjcy","_id":"ciso5o1zv001ms9lpb3rji3x0"}],"PostTag":[{"post_id":"ciso5o1ye0000s9lpgvy1pm88","tag_id":"ciso5o1yn0003s9lpfuv3zb2g","_id":"ciso5o1z7000fs9lpfwjs5yfv"},{"post_id":"ciso5o1ye0000s9lpgvy1pm88","tag_id":"ciso5o1yt0007s9lpvv8xdf00","_id":"ciso5o1z8000hs9lpad9hygfg"},{"post_id":"ciso5o1yk0002s9lpbtsgr8k5","tag_id":"ciso5o1z6000ds9lpd3vtwo5f","_id":"ciso5o1zn000ts9lpl8tebzki"},{"post_id":"ciso5o1yk0002s9lpbtsgr8k5","tag_id":"ciso5o1za000ks9lpa9h52r74","_id":"ciso5o1zn000us9lp0nghdndx"},{"post_id":"ciso5o1ys0006s9lpmp3a969y","tag_id":"ciso5o1zk000qs9lpxuuapgkz","_id":"ciso5o1zp0011s9lpb0r3mxcn"},{"post_id":"ciso5o1ys0006s9lpmp3a969y","tag_id":"ciso5o1za000ks9lpa9h52r74","_id":"ciso5o1zp0012s9lpbo6mkb5c"},{"post_id":"ciso5o1yt0008s9lpobz5n0nq","tag_id":"ciso5o1zp000zs9lppmscv1z9","_id":"ciso5o1zs0019s9lpo3xsq66o"},{"post_id":"ciso5o1yt0008s9lpobz5n0nq","tag_id":"ciso5o1zq0014s9lp4ya18ubj","_id":"ciso5o1zs001as9lpt4y0wfu3"},{"post_id":"ciso5o1yv000as9lp5avglxiu","tag_id":"ciso5o1zr0017s9lpgpr7k2ip","_id":"ciso5o1zu001hs9lpj8dzmaja"},{"post_id":"ciso5o1yv000as9lp5avglxiu","tag_id":"ciso5o1zs001cs9lp6s4vfvek","_id":"ciso5o1zu001is9lpwigsqfj2"},{"post_id":"ciso5o1z2000cs9lpvxtebthh","tag_id":"ciso5o1zt001fs9lp56o30t60","_id":"ciso5o1zv001ls9lpd7nb4f0s"},{"post_id":"ciso5o1z7000gs9lp7ccuiqrq","tag_id":"ciso5o1zu001ks9lpindh4dnn","_id":"ciso5o1zv001os9lps2cz3o41"},{"post_id":"ciso5o1z9000is9lpq7t4g4j8","tag_id":"ciso5o1zs001cs9lp6s4vfvek","_id":"ciso5o1zx001ts9lpa4yp9t9m"},{"post_id":"ciso5o1z9000is9lpq7t4g4j8","tag_id":"ciso5o1zq0014s9lp4ya18ubj","_id":"ciso5o1zy001us9lph2ai02xo"},{"post_id":"ciso5o1z9000is9lpq7t4g4j8","tag_id":"ciso5o1zp000zs9lppmscv1z9","_id":"ciso5o1zy001ws9lptzrnrpnt"},{"post_id":"ciso5o1z9000is9lpq7t4g4j8","tag_id":"ciso5o1zw001rs9lpiqi3odxo","_id":"ciso5o1zy001xs9lpjys2unyx"},{"post_id":"ciso5o1zb000ms9lpqyt0zj4o","tag_id":"ciso5o1zx001ss9lpwzth0yve","_id":"ciso5o1zz001ys9lpi1umtiw4"},{"post_id":"ciso5o1zc000os9lpwlpzuiwe","tag_id":"ciso5o1zy001vs9lpuigjlbdc","_id":"ciso5o1zz001zs9lp2jx8yq70"}],"Tag":[{"name":"gradle","_id":"ciso5o1yn0003s9lpfuv3zb2g"},{"name":"java","_id":"ciso5o1yt0007s9lpvv8xdf00"},{"name":"github","_id":"ciso5o1z6000ds9lpd3vtwo5f"},{"name":"hexo","_id":"ciso5o1za000ks9lpa9h52r74"},{"name":"facebook comments","_id":"ciso5o1zk000qs9lpxuuapgkz"},{"name":"SSL","_id":"ciso5o1zp000zs9lppmscv1z9"},{"name":"nginx","_id":"ciso5o1zq0014s9lp4ya18ubj"},{"name":"mysql","_id":"ciso5o1zr0017s9lpgpr7k2ip"},{"name":"ubuntu","_id":"ciso5o1zs001cs9lp6s4vfvek"},{"name":"LinkedList","_id":"ciso5o1zt001fs9lp56o30t60"},{"name":"Line","_id":"ciso5o1zu001ks9lpindh4dnn"},{"name":"https","_id":"ciso5o1zw001rs9lpiqi3odxo"},{"name":"npm","_id":"ciso5o1zx001ss9lpwzth0yve"},{"name":"web service","_id":"ciso5o1zy001vs9lpuigjlbdc"}]}}